
Post: 1
     Manual annotation: ('thread.allocate_lock()', 'Method')
         Tokenizer matches: [('thread.allocate_lock()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('__name__', 'Variable')
         Tokenizer matches: [('__name__', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('myfunction(string, sleeptime, lock, *args)', 'Method')
         Tokenizer matches: [('myfunction(string, sleeptime, lock, *args)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('"__main__"', 'Operand')
         Tokenizer matches: [('"__main__"', 'STRING')]
             false positive POS tag match: operand
     Manual annotation: ('lock.acquire()', 'Method')
         Tokenizer matches: [('lock.acquire()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('# Threading example', 'Comment')
         Tokenizer matches: [('# threading example', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('do', 'VBZ')
         Tokenizer matches: [('do', 'VBP')]
             false positive POS tag match: vbz
     Manual annotation: ('time.sleep(sleeptime)', 'Method')
         Tokenizer matches: [('time.sleep(sleeptime)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('thread.start_new_thread(myfunction, ("Thread #: 2", 2, lock)', 'Method')
         Tokenizer matches: []
     Manual annotation: ('"__main__"', 'String')
         Tokenizer matches: [('"__main__"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('thread.start_new_thread(myfunction, ("Thread #: 1", 2, lock))', 'Method')
         Tokenizer matches: [('thread.start_new_thread(myfunction, ("thread #: 1", 2, lock))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('lock.release()', 'Method')
         Tokenizer matches: [('lock.release()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('What', 'WP')
         Tokenizer matches: [('what', 'WP')]
             true positive POS tag match: wp
     Manual annotation: ('ock', 'Variable')
         Tokenizer matches: []
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('while', 'Operator')
         Tokenizer matches: [('while', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('does', 'VBZ')
         Tokenizer matches: [('does', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('==', 'Operator')
         Tokenizer matches: [('==', 'OPERATOR')]
             true positive POS tag match: operator
Post: 10
     Manual annotation: ('preferred', 'JJ')
         Tokenizer matches: [('preferred', 'VBN')]
             false positive POS tag match: jj
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('I', 'PRP')
         Tokenizer matches: [('i', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('"The list is empty or null"', 'String')
         Tokenizer matches: [('"the list is empty or null"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('have', 'VBP')
         Tokenizer matches: [('have', 'VBP')]
             true positive POS tag match: vbp
     Manual annotation: ('below', 'NN')
         Tokenizer matches: [('below', 'IN')]
             false positive POS tag match: nn
     Manual annotation: ('will', 'MD')
         Tokenizer matches: [('will', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('as', 'IN')
         Tokenizer matches: [('as', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('null', 'JJ')
         Tokenizer matches: [('null', 'VB')]
             false positive POS tag match: jj
     Manual annotation: ('well', 'RB')
         Tokenizer matches: [('well', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('a', 'Operand')
         Tokenizer matches: [('a', 'DT')]
             false positive POS tag match: operand
     Manual annotation: ('not', 'Operator')
         Tokenizer matches: [('not', 'RB')]
             false positive POS tag match: operator
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('seen', 'VBN')
         Tokenizer matches: [('seen', 'VBN')]
             true positive POS tag match: vbn
     Manual annotation: ('catch', 'VB')
         Tokenizer matches: [('catch', 'VBP')]
             true positive POS tag match: vb
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
Post: 100
     Manual annotation: ('Or', 'CC')
         Tokenizer matches: [('or', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('L.reverse()', 'Method')
         Tokenizer matches: [('l.reverse()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('L[::-1]', 'Variable')
         Tokenizer matches: []
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('[40, 20, 10, 0]', 'Variable')
         Tokenizer matches: []
     Manual annotation: ('L', 'Variable')
         Tokenizer matches: [('l', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('[0,10,20,40]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('[40, 20, 10, 0', 'Variable')
         Tokenizer matches: []
Post: 11
     Manual annotation: ('notion', 'NN')
         Tokenizer matches: [('notion', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('elements', 'NNS')
         Tokenizer matches: [('elements', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('number', 'NN')
         Tokenizer matches: [('number', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('lists', 'NNS')
         Tokenizer matches: [('lists', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('track', 'NN')
         Tokenizer matches: [('track', 'VBP')]
             false positive POS tag match: nn
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('keeps', 'VBZ')
         Tokenizer matches: [('keeps', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('O(1)', 'UNK')
         Tokenizer matches: [('o(1)', 'METHOD')]
             false positive POS tag match: unk
     Manual annotation: ('JavaScript', 'NNP')
         Tokenizer matches: [('javascript', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('strings', 'NNS')
         Tokenizer matches: [('strings', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('truthy/falsy', 'UNK')
         Tokenizer matches: []
     Manual annotation: ('containers', 'NNS')
         Tokenizer matches: [('containers', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('has', 'VBZ')
         Tokenizer matches: [('has', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('dicts', 'NNS')
         Tokenizer matches: [('dicts', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('an', 'DT')
         Tokenizer matches: [('an', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('these', 'DT')
         Tokenizer matches: [('these', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('internally', 'RB')
         Tokenizer matches: [('internally', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('operation', 'NN')
         Tokenizer matches: [('operation', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('sets', 'NNS')
         Tokenizer matches: [('sets', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('similar', 'JJ')
         Tokenizer matches: [('similar', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('len()', 'Method')
         Tokenizer matches: [('len()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 12
     Manual annotation: ('looking', 'VBG')
         Tokenizer matches: [('looking', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('I', 'PRP')
         Tokenizer matches: [('i', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('continue', 'Operator')
         Tokenizer matches: []
     Manual annotation: ('do', 'VB')
         Tokenizer matches: [('do', 'VBP')]
             true positive POS tag match: vb
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('string.contains', 'UNK')
         Tokenizer matches: [('string.contains', 'URL')]
             false positive POS tag match: unk
     Manual annotation: ('or', 'CC')
         Tokenizer matches: [('or', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('method', 'NN')
         Tokenizer matches: [('method', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('somestring.contains("blah")', 'Method')
         Tokenizer matches: [('somestring.contains("blah")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('not', 'Operator')
         Tokenizer matches: [('not', 'RB')]
             false positive POS tag match: operator
     Manual annotation: ('string.indexof', 'UNK')
         Tokenizer matches: [('string.indexof', 'URL')]
             false positive POS tag match: unk
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('ython', 'NNP')
         Tokenizer matches: []
     Manual annotation: ('want', 'VBP')
         Tokenizer matches: [('want', 'JJ')]
             false positive POS tag match: vbp
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
Post: 13-1
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('use', 'VB')
         Tokenizer matches: [('use', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('operator', 'NN')
         Tokenizer matches: [('operator', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('continue', 'Operator')
         Tokenizer matches: []
     Manual annotation: ('somestring', 'Operand')
         Tokenizer matches: [('somestring', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('not', 'Operator')
         Tokenizer matches: [('not', 'RB')]
             false positive POS tag match: operator
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('"blah"', 'String')
         Tokenizer matches: [('"blah"', 'STRING')]
             true positive POS tag match: string
Post: 14
     Manual annotation: ('"This be a string"', 'String')
         Tokenizer matches: [('"this be a string"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('value', 'NN')
         Tokenizer matches: [('value', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('find_this', 'UNK')
         Tokenizer matches: [('find_this', 'VARIABLE')]
             false positive POS tag match: unk
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('Boolean', 'NNP')
         Tokenizer matches: [('boolean', 'JJ')]
             false positive POS tag match: nnp
     Manual annotation: ('True', 'JJ')
         Tokenizer matches: [('true', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('else', 'Operator')
         Tokenizer matches: [('else', 'RB')]
             false positive POS tag match: operator
     Manual annotation: ('i.e.', 'UNK')
         Tokenizer matches: []
     Manual annotation: ('"tr"', 'String')
         Tokenizer matches: [('"tr"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('few', 'JJ')
         Tokenizer matches: [('few', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('string', 'NN')
         Tokenizer matches: [('string', 'VBG')]
             false positive POS tag match: nn
     Manual annotation: ('False', 'JJ')
         Tokenizer matches: [('false', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('not', 'RB')
         Tokenizer matches: [('not', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('find', 'VB')
         Tokenizer matches: [('find', 'JJ')]
             false positive POS tag match: vb
     Manual annotation: ('str1', 'Operand')
         Tokenizer matches: [('str1', 'NNP')]
             false positive POS tag match: operand
     Manual annotation: ('characters', 'NNS')
         Tokenizer matches: [('characters', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('contains', 'VBZ')
         Tokenizer matches: [('contains', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('str1', 'Variable')
         Tokenizer matches: [('str1', 'NNP')]
             false positive POS tag match: variable
     Manual annotation: ('Another', 'DT')
         Tokenizer matches: [('another', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('with', 'IN')
         Tokenizer matches: [('with', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('" is been found in "', 'String')
         Tokenizer matches: [('" is been found in "', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('return', 'NN')
         Tokenizer matches: [('return', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('or', 'CC')
         Tokenizer matches: [('or', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('" is not found in "', 'String')
         Tokenizer matches: [('" is not found in "', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('way', 'NN')
         Tokenizer matches: [('way', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('find_this', 'Variable')
         Tokenizer matches: [('find_this', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('whether', 'IN')
         Tokenizer matches: [('whether', 'IN')]
             true positive POS tag match: in
Post: 15
     Manual annotation: ('use', 'VB')
         Tokenizer matches: [('use', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('strftime', 'UNK')
         Tokenizer matches: [('strftime', 'VBP')]
             false positive POS tag match: unk
     Manual annotation: ("'2009-01-05 22:14:39'", 'String')
         Tokenizer matches: [("'2009-01-05 22:14:39'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('gmtime', 'UNK')
         Tokenizer matches: [('gmtime', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('time', 'NN')
         Tokenizer matches: [('time', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('strftime("%Y-%m-%d %H:%M:%S", gmtime())', 'Method')
         Tokenizer matches: [('strftime("%y-%m-%d %h:%m:%s", gmtime())', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('time.strftime()', 'Method')
         Tokenizer matches: [('time.strftime()', 'METHOD')]
             true positive POS tag match: method
Post: 16
     Manual annotation: ("datetime.now().strftime('%Y-%m-%d %H:%M:%S')", 'Method')
         Tokenizer matches: []
     Manual annotation: ('For', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('example', 'NN')
         Tokenizer matches: [('example', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('https://docs.python.org/3/library/time.html#time.strftime', 'URL')
         Tokenizer matches: []
     Manual annotation: ('datetime', 'UNK')
         Tokenizer matches: [('datetime', 'VBD')]
             false positive POS tag match: unk
     Manual annotation: ('format', 'NN')
         Tokenizer matches: [('format', 'VBN')]
             false positive POS tag match: nn
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('will', 'MD')
         Tokenizer matches: [('will', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('strftime', 'UNK')
         Tokenizer matches: [('strftime', 'JJ')]
             false positive POS tag match: unk
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('like', 'IN')
         Tokenizer matches: [('like', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ("'2013-09-18 11:16:32'", 'String')
         Tokenizer matches: [("'2013-09-18 11:16:32'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('be', 'VB')
         Tokenizer matches: [('be', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('this', 'DT')
         Tokenizer matches: []
     Manual annotation: ('output', 'NN')
         Tokenizer matches: [('output', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('The', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('at', 'IN')
         Tokenizer matches: [('at', 'IN')]
             true positive POS tag match: in
Post: 17
     Manual annotation: ('me', 'Variable')
         Tokenizer matches: []
     Manual annotation: ('datetime', 'UNK')
         Tokenizer matches: [('datetime', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('date_time', 'Variable')
         Tokenizer matches: [('date_time', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('date', 'Variable')
         Tokenizer matches: [('date', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('date_time.split()[1]', 'Method')
         Tokenizer matches: []
     Manual annotation: ('will', 'MD')
         Tokenizer matches: [('will', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('date', 'NN')
         Tokenizer matches: [('date', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('time', 'NN')
         Tokenizer matches: [('time', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('str(datetime.datetime.now())', 'Method')
         Tokenizer matches: [('str(datetime.datetime.now())', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('date_time.split()[0]', 'Method')
         Tokenizer matches: []
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
Post: 18
     Manual annotation: ('items.amount()', 'Method')
         Tokenizer matches: [('items.amount()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('# FAKE METHOD', 'Comment')
         Tokenizer matches: []
     Manual annotation: ('items.append("banana")', 'Method')
         Tokenizer matches: [('items.append("banana")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('I', 'PRP')
         Tokenizer matches: [('i', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('items.append("orange")', 'Method')
         Tokenizer matches: [('items.append("orange")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('get', 'VB')
         Tokenizer matches: [('get', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('elements', 'NNS')
         Tokenizer matches: [('elements', 'VBZ')]
             false positive POS tag match: nns
     Manual annotation: ('items.append("apple")', 'Method')
         Tokenizer matches: [('items.append("apple")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('number', 'NN')
         Tokenizer matches: [('number', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('items', 'Variable')
         Tokenizer matches: [('items', 'NNS')]
             false positive POS tag match: variable
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('# Should return 3', 'Comment')
         Tokenizer matches: [('# should return 3', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('do', 'VBP')
         Tokenizer matches: [('do', 'VBP')]
             true positive POS tag match: vbp
     Manual annotation: ('How', 'WRB')
         Tokenizer matches: [('how', 'WRB')]
             true positive POS tag match: wrb
     Manual annotation: ('[]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 19
     Manual annotation: ('ypes', 'NNS')
         Tokenizer matches: []
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'VB')]
             false positive POS tag match: nnp
     Manual annotation: ('function', 'NN')
         Tokenizer matches: [('function', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('len([1,2,3])', 'Method')
         Tokenizer matches: [('len([1,2,3])', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('used', 'VBN')
         Tokenizer matches: [('used', 'VBD')]
             false positive POS tag match: vbn
     Manual annotation: ('lot', 'NN')
         Tokenizer matches: [('lot', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('types', 'NNS')
         Tokenizer matches: [('types', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('built-in', 'JJ')
         Tokenizer matches: [('built-in', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('library', 'JJ')
         Tokenizer matches: [('library', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('be', 'VB')
         Tokenizer matches: [('be', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('3', 'CD')
         Tokenizer matches: []
     Manual annotation: ('both', 'DT')
         Tokenizer matches: [('both', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('The', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('len()', 'Method')
         Tokenizer matches: [('len()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('with', 'IN')
         Tokenizer matches: [('with', 'IN')]
             true positive POS tag match: in
Post: 2
     Manual annotation: ('using', 'VBG')
         Tokenizer matches: [('using', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('when', 'WRB')
         Tokenizer matches: [('when', 'WRB')]
             true positive POS tag match: wrb
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('__name__', 'Variable')
         Tokenizer matches: [('__name__', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('runs', 'VBZ')
         Tokenizer matches: [('runs', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('myscript.py', 'UNK')
         Tokenizer matches: [('myscript.py', 'URL')]
             false positive POS tag match: unk
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('that', 'DT')
         Tokenizer matches: [('that', 'IN')]
             false positive POS tag match: dt
     Manual annotation: ('command', 'NN')
         Tokenizer matches: [('command', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('"__main__"', 'String')
         Tokenizer matches: [('"__main__"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('run', 'VB')
         Tokenizer matches: [('run', 'VBN')]
             true positive POS tag match: vb
     Manual annotation: ('script', 'NN')
         Tokenizer matches: [('script', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('say', 'UH')
         Tokenizer matches: [('say', 'VBP')]
             false positive POS tag match: uh
     Manual annotation: ('like', 'IN')
         Tokenizer matches: [('like', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('part', 'NN')
         Tokenizer matches: [('part', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('line', 'NN')
         Tokenizer matches: [('line', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('==', 'Operator')
         Tokenizer matches: [('==', 'OPERATOR')]
             true positive POS tag match: operator
Post: 20-1
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('lists', 'NNS')
         Tokenizer matches: [('lists', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('but', 'CC')
         Tokenizer matches: [('but', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ("join(     urllib2.urlopen('http://data.stackexchange.com/users/7095'))", 'Method')
         Tokenizer matches: []
     Manual annotation: ('result', 'NN')
         Tokenizer matches: [('result', 'VBD')]
             false positive POS tag match: nn
     Manual annotation: ('print', 'NN')
         Tokenizer matches: [('print', 'VBP')]
             false positive POS tag match: nn
     Manual annotation: ('be', 'VB')
         Tokenizer matches: [('be', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('just', 'RB')
         Tokenizer matches: [('just', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('any', 'DT')
         Tokenizer matches: [('any', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('import', 'NN')
         Tokenizer matches: [('import', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('strings', 'NNS')
         Tokenizer matches: [('strings', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('not', 'RB')
         Tokenizer matches: [('not', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ("'\\n############\\n'", 'String')
         Tokenizer matches: []
     Manual annotation: ('It', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('iterable', 'NN')
         Tokenizer matches: [('iterable', 'JJ')]
             false positive POS tag match: nn
     Manual annotation: ('joined', 'VBN')
         Tokenizer matches: [('joined', 'VBN')]
             true positive POS tag match: vbn
     Manual annotation: ('"joiner"', 'String')
         Tokenizer matches: [('"joiner"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('always', 'RB')
         Tokenizer matches: [('always', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('E.G', 'UNK')
         Tokenizer matches: [('e.g', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('are', 'VBP')
         Tokenizer matches: [('are', 'VBP')]
             true positive POS tag match: vbp
     Manual annotation: ('because', 'IN')
         Tokenizer matches: [('because', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('urllib2', 'UNK')
         Tokenizer matches: [('urllib2', 'NNP')]
             false positive POS tag match: unk
Post: 21
     Manual annotation: ('so', 'IN')
         Tokenizer matches: [('so', 'RB')]
             false positive POS tag match: in
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('later', 'RB')
         Tokenizer matches: [('later', 'JJ')]
             false positive POS tag match: rb
     Manual annotation: ('via', 'IN')
         Tokenizer matches: [('via', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('block', 'NN')
         Tokenizer matches: [('block', 'VBP')]
             false positive POS tag match: nn
     Manual annotation: ('I', 'PRP')
         Tokenizer matches: [('i', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('raise', 'VB')
         Tokenizer matches: [('raise', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('caught', 'VBN')
         Tokenizer matches: [('caught', 'VBN')]
             true positive POS tag match: vbn
     Manual annotation: ('exception', 'NN')
         Tokenizer matches: [('exception', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('except', 'UNK')
         Tokenizer matches: [('except', 'IN')]
             false positive POS tag match: unk
     Manual annotation: ('be', 'VB')
         Tokenizer matches: [('be', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('an', 'DT')
         Tokenizer matches: [('an', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('How', 'WRB')
         Tokenizer matches: [('how', 'WRB')]
             true positive POS tag match: wrb
     Manual annotation: ('that', 'IN')
         Tokenizer matches: [('that', 'WDT')]
             false positive POS tag match: in
Post: 22
     Manual annotation: ('more', 'JJR')
         Tokenizer matches: [('more', 'JJR')]
             true positive POS tag match: jjr
     Manual annotation: ('python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('if', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('answer', 'NN')
         Tokenizer matches: [('answer', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('this', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('thing', 'NN')
         Tokenizer matches: [('thing', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ("DON'T", 'VBP')
         Tokenizer matches: []
     Manual annotation: ('instead', 'RB')
         Tokenizer matches: [('instead', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('much', 'RB')
         Tokenizer matches: [('much', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('Aaron Hall', 'NNP')
         Tokenizer matches: []
     Manual annotation: ('see', 'VB')
         Tokenizer matches: [('see', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('statement', 'NN')
         Tokenizer matches: [('statement', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('info', 'NN')
         Tokenizer matches: [('info', 'VB')]
             false positive POS tag match: nn
     Manual annotation: ('like', 'VB')
         Tokenizer matches: [('like', 'IN')]
             false positive POS tag match: vb
     Manual annotation: ('Exception("I know python!")', 'Method')
         Tokenizer matches: [('exception("i know python!")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('See', 'VB')
         Tokenizer matches: [('see', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('docs', 'NNS')
         Tokenizer matches: [('docs', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('get', 'VB')
         Tokenizer matches: [('get', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('not', 'RB')
         Tokenizer matches: [('not', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('raise', 'NN')
         Tokenizer matches: [('raise', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('THIS', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ("Can't", 'VB')
         Tokenizer matches: []
     Manual annotation: ('excellent', 'JJ')
         Tokenizer matches: [('excellent', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('more', 'RBR')
         Tokenizer matches: [('more', 'JJR')]
             false positive POS tag match: rbr
     Manual annotation: ('Exception', 'NNP')
         Tokenizer matches: [('exception', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('right', 'JJ')
         Tokenizer matches: [('right', 'RB')]
             false positive POS tag match: jj
     Manual annotation: ('DO', 'VB')
         Tokenizer matches: [('do', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('do', 'VB')
         Tokenizer matches: [('do', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('bare', 'JJ')
         Tokenizer matches: [('bare', 'VBP')]
             false positive POS tag match: jj
     Manual annotation: ('than', 'IN')
         Tokenizer matches: [('than', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('absolutely', 'RB')
         Tokenizer matches: [('absolutely', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('Raising', 'VBG')
         Tokenizer matches: [('raising', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('pythonic', 'JJ')
         Tokenizer matches: [('pythonic', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
Post: 23
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('6', 'CD')
         Tokenizer matches: []
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ("won't", 'RB')
         Tokenizer matches: []
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('reference', 'NN')
         Tokenizer matches: [('reference', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('format', 'JJ')
         Tokenizer matches: [('format', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('string parse time"', 'String')
         Tokenizer matches: []
     Manual annotation: ('2', 'CD')
         Tokenizer matches: []
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('timezone-naive', 'JJ')
         Tokenizer matches: [('timezone-naive', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('search', 'VB')
         Tokenizer matches: [('search', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('months', 'NNS')
         Tokenizer matches: [('months', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('loud', 'JJ')
         Tokenizer matches: [('loud', 'VBN')]
             false positive POS tag match: jj
     Manual annotation: ('nice', 'JJ')
         Tokenizer matches: [('nice', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('The', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('again', 'RB')
         Tokenizer matches: [('again', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('have', 'RB')
         Tokenizer matches: [('have', 'VBP')]
             false positive POS tag match: rb
     Manual annotation: ('Links', 'NNS')
         Tokenizer matches: [('links', 'VBZ')]
             false positive POS tag match: nns
     Manual annotation: ('really', 'RB')
         Tokenizer matches: [('really', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('strftime', 'Variable')
         Tokenizer matches: [('strftime', 'VBP')]
             false positive POS tag match: variable
     Manual annotation: ('datetime', 'UNK')
         Tokenizer matches: [('datetime', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('strftime', 'UNK')
         Tokenizer matches: [('strftime', 'VBP')]
             false positive POS tag match: unk
     Manual annotation: ('This', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('strptime', 'UNK')
         Tokenizer matches: [('strptime', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('out', 'RP')
         Tokenizer matches: [('out', 'IN')]
             false positive POS tag match: rp
     Manual annotation: ('"string format time"', 'String')
         Tokenizer matches: [('"string format time"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('also', 'RB')
         Tokenizer matches: [('also', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('today', 'NN')
         Tokenizer matches: [('today', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('object', 'NN')
         Tokenizer matches: [('object', 'JJ')]
             false positive POS tag match: nn
     Manual annotation: ('strptime', 'Variable')
         Tokenizer matches: [('strptime', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'VBN')]
             false positive POS tag match: nnp
     Manual annotation: ('resulting', 'VBG')
         Tokenizer matches: [('resulting', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('atetime_object', 'Variable')
         Tokenizer matches: []
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('Notes', 'NNS')
         Tokenizer matches: [('notes', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('Pronounce', 'VB')
         Tokenizer matches: [('pronounce', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('documentation', 'NN')
         Tokenizer matches: [('documentation', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('ask', 'NN')
         Tokenizer matches: []
     Manual annotation: ("datetime.strptime('Jun 1 2005  1:33PM', '%b %d %Y %I:%M%p')", 'Method')
         Tokenizer matches: [("datetime.strptime('jun 1 2005  1:33pm', '%b %d %y %i:%m%p')", 'METHOD')]
             true positive POS tag match: method
Post: 24
     Manual annotation: ('make', 'VB')
         Tokenizer matches: [('make', 'VBP')]
             true positive POS tag match: vb
     Manual annotation: ('use', 'VB')
         Tokenizer matches: [('use', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ("date_converter.string_to_datetime('Jun 1 2005  1:33PM', '%b %d %Y %I:%M%p')", 'Method')
         Tokenizer matches: [("date_converter.string_to_datetime('jun 1 2005  1:33pm', '%b %d %y %i:%m%p')", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('easy', 'JJ')
         Tokenizer matches: [('easy', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('converted_date', 'Variable')
         Tokenizer matches: [('converted_date', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('easy_date', 'UNK')
         Tokenizer matches: [('easy_date', 'VARIABLE')]
             false positive POS tag match: unk
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('date_converter', 'UNK')
         Tokenizer matches: [('date_converter', 'VARIABLE')]
             false positive POS tag match: unk
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
Post: 25
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('function', 'NN')
         Tokenizer matches: [('function', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('if', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('which', 'WDT')
         Tokenizer matches: [('which', 'WDT')]
             true positive POS tag match: wdt
     Manual annotation: ('removes', 'VBZ')
         Tokenizer matches: [('removes', 'NNS')]
             false positive POS tag match: vbz
     Manual annotation: ('string', 'NN')
         Tokenizer matches: [('string', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('What', 'WP')
         Tokenizer matches: [('what', 'WP')]
             true positive POS tag match: wp
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('equivalent', 'NN')
         Tokenizer matches: [('equivalent', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('newline', 'NN')
         Tokenizer matches: [('newline', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('chomp', 'UNK')
         Tokenizer matches: [('chomp', 'VBP')]
             false positive POS tag match: unk
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('last', 'JJ')
         Tokenizer matches: [('last', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('character', 'NN')
         Tokenizer matches: [('character', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('Perl', 'NNP')
         Tokenizer matches: [('perl', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 26
     Manual annotation: ('And', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('"line 1\\nline 2\\r\\nline 3\\nline 4"', 'String')
         Tokenizer matches: []
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('without', 'IN')
         Tokenizer matches: [('without', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('"pythonic"', 'String')
         Tokenizer matches: [('"pythonic"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('splitlines()', 'Method')
         Tokenizer matches: [('splitlines()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ("'line 3'", 'String')
         Tokenizer matches: [("'line 3'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ("'line 4'", 'String')
         Tokenizer matches: [("'line 4'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('say', 'VB')
         Tokenizer matches: [('say', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('text.splitlines()', 'Method')
         Tokenizer matches: [('text.splitlines()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ("'line 2'", 'String')
         Tokenizer matches: [("'line 2'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('I', 'PRP')
         Tokenizer matches: [('i', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('get', 'VB')
         Tokenizer matches: [('get', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ("'line 1'", 'String')
         Tokenizer matches: [("'line 1'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('characters', 'NNS')
         Tokenizer matches: [('characters', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('would', 'MD')
         Tokenizer matches: [('would', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('newline', 'JJ')
         Tokenizer matches: [('newline', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('way', 'NN')
         Tokenizer matches: [('way', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('trailing', 'VBG')
         Tokenizer matches: [('trailing', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('text', 'Variable')
         Tokenizer matches: [('text', 'JJ')]
             false positive POS tag match: variable
     Manual annotation: ('lines', 'NNS')
         Tokenizer matches: [('lines', 'NNS')]
             true positive POS tag match: nns
Post: 27
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('get', 'VB')
         Tokenizer matches: [('get', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('have', 'VBP')
         Tokenizer matches: [('have', 'VBP')]
             true positive POS tag match: vbp
     Manual annotation: ('or', 'CC')
         Tokenizer matches: [('or', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('always', 'RB')
         Tokenizer matches: [('always', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('regexps', 'NNS')
         Tokenizer matches: [('regexps', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('could', 'MD')
         Tokenizer matches: [('could', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('geekier', 'JJR')
         Tokenizer matches: [('geekier', 'JJR')]
             true positive POS tag match: jjr
     Manual annotation: ('fun', 'NN')
         Tokenizer matches: [('fun', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ("'line 1line 2...'", 'String')
         Tokenizer matches: [("'line 1line 2...'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('"line 1\\nline 2\\r\\n...".replace(\'\\n\', \'\').replace(\'\\r\', \'\')', 'Method')
         Tokenizer matches: []
     Manual annotation: ('with', 'IN')
         Tokenizer matches: [('with', 'IN')]
             true positive POS tag match: in
Post: 28
     Manual annotation: ("'hello world'", 'String')
         Tokenizer matches: [("'hello world'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('use', 'VB')
         Tokenizer matches: [('use', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('"\\n\\n hello world \\n\\n".strip()', 'Method')
         Tokenizer matches: []
     Manual annotation: ('strip', 'UNK')
         Tokenizer matches: [('strip', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('line', 'Variable')
         Tokenizer matches: [('line', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('line.strip()', 'Method')
         Tokenizer matches: [('line.strip()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('demo', 'NN')
         Tokenizer matches: [('demo', 'VBD')]
             false positive POS tag match: nn
Post: 29
     Manual annotation: ('re', 'UNK')
         Tokenizer matches: [('re', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('r_unwanted', 'Variable')
         Tokenizer matches: [('r_unwanted', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('re.compile("[\\n\\t\\r]")', 'Method')
         Tokenizer matches: [('re.compile("[\\n\\t\\r]")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('r_unwanted.sub("", your_text)', 'Method')
         Tokenizer matches: [('r_unwanted.sub("", your_text)', 'METHOD')]
             true positive POS tag match: method
Post: 3-1
     Manual annotation: ('file', 'NN')
         Tokenizer matches: [('file', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('as', 'PRP')
         Tokenizer matches: [('as', 'IN')]
             false positive POS tag match: prp
     Manual annotation: ('__name__', 'Variable')
         Tokenizer matches: [('__name__', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('# This allows the file to be used as a SCRIPT', 'Comment')
         Tokenizer matches: [('# this allows the file to be used as a script', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('fibo.py', 'UNK')
         Tokenizer matches: [('fibo.py', 'URL')]
             false positive POS tag match: unk
     Manual annotation: ('well', 'RB')
         Tokenizer matches: [('well', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('fib(int(sys.argv[1]))', 'Method')
         Tokenizer matches: [('fib(int(sys.argv[1]))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('named', 'VBN')
         Tokenizer matches: [('named', 'VBN')]
             true positive POS tag match: vbn
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('module', 'NN')
         Tokenizer matches: [('module', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('a', 'Variable')
         Tokenizer matches: [('a', 'DT')]
             false positive POS tag match: variable
     Manual annotation: ('# Other modules can IMPORT this MODULE to use the function fib', 'Comment')
         Tokenizer matches: [('# other modules can import this module to use the function fib', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('print()', 'Method')
         Tokenizer matches: [('print()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('https://docs.python.org/3.5/tutorial/modules.html', 'URL')
         Tokenizer matches: [('https://docs.python.org/3.5/tutorial/modules.html', 'URL')]
             true positive POS tag match: url
     Manual annotation: ('b', 'Variable')
         Tokenizer matches: [('b', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('# write Fibonacci series up to n', 'Comment')
         Tokenizer matches: [('# write fibonacci series up to n', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('fibo', 'NNP')
         Tokenizer matches: [('fibo', 'VBP')]
             false positive POS tag match: nnp
     Manual annotation: ('an', 'DT')
         Tokenizer matches: [('an', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('"__main__"', 'String')
         Tokenizer matches: [('"__main__"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('make', 'VB')
         Tokenizer matches: [('make', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ("print(b, end=' ')", 'Method')
         Tokenizer matches: [("print(b, end=' ')", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('as', 'IN')
         Tokenizer matches: [('as', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('script', 'NN')
         Tokenizer matches: [('script', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('Reference', 'NN')
         Tokenizer matches: [('reference', 'VBP')]
             false positive POS tag match: nn
     Manual annotation: ('usable', 'JJ')
         Tokenizer matches: [('usable', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('while', 'Operator')
         Tokenizer matches: [('while', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('as', 'RB')
         Tokenizer matches: [('as', 'IN')]
             false positive POS tag match: rb
     Manual annotation: ('importable', 'JJ')
         Tokenizer matches: [('importable', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('==', 'Operator')
         Tokenizer matches: [('==', 'OPERATOR')]
             true positive POS tag match: operator
Post: 30
     Manual annotation: ("'-'.join(sentence)", 'Method')
         Tokenizer matches: []
     Manual annotation: ("'this-is-a-sentence'", 'String')
         Tokenizer matches: [("'this-is-a-sentence'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('Use', 'VB')
         Tokenizer matches: [('use', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ("['this','is','a','sentence']", 'Operand')
         Tokenizer matches: []
     Manual annotation: ('join', 'UNK')
         Tokenizer matches: [('join', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('sentence', 'Variable')
         Tokenizer matches: [('sentence', 'NN')]
             false positive POS tag match: variable
Post: 31-2
     Manual annotation: ('print(glob.glob("/home/adam/*.txt"))', 'Method')
         Tokenizer matches: [('print(glob.glob("/home/adam/*.txt"))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('using', 'VBG')
         Tokenizer matches: [('using', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('prefer', 'VBP')
         Tokenizer matches: [('prefer', 'NN')]
             false positive POS tag match: vbp
     Manual annotation: ('return', 'VB')
         Tokenizer matches: [('return', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('expansion', 'NN')
         Tokenizer matches: [('expansion', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('files', 'NNS')
         Tokenizer matches: [('files', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ("'/home/adam/file2.txt'", 'String')
         Tokenizer matches: [("'/home/adam/file2.txt'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('pattern', 'NN')
         Tokenizer matches: [('pattern', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('module', 'NN')
         Tokenizer matches: [('module', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('queried', 'VBN')
         Tokenizer matches: [('queried', 'JJ')]
             false positive POS tag match: vbn
     Manual annotation: ("'/home/adam/file1.txt'", 'String')
         Tokenizer matches: [("'/home/adam/file1.txt'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('I', 'PRP')
         Tokenizer matches: [('i', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('glob', 'UNK')
         Tokenizer matches: [('glob', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('Will', 'MD')
         Tokenizer matches: [('will', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('matching', 'VBG')
         Tokenizer matches: [('matching', 'JJ')]
             false positive POS tag match: vbg
     Manual annotation: ('with', 'IN')
         Tokenizer matches: [('with', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('as', 'IN')
         Tokenizer matches: [('as', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('does', 'VBZ')
         Tokenizer matches: [('does', 'VBZ')]
             true positive POS tag match: vbz
Post: 32
     Manual annotation: ('"somedirectory"', 'String')
         Tokenizer matches: [('"somedirectory"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('files', 'NNS')
         Tokenizer matches: [('files', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('will', 'MD')
         Tokenizer matches: [('will', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('all', 'DT')
         Tokenizer matches: [('all', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('os.listdir("somedirectory")', 'Method')
         Tokenizer matches: [('os.listdir("somedirectory")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('directories', 'NNS')
         Tokenizer matches: [('directories', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('os', 'UNK')
         Tokenizer matches: [('os', 'NNS')]
             false positive POS tag match: unk
     Manual annotation: ('return', 'VB')
         Tokenizer matches: [('return', 'VBP')]
             true positive POS tag match: vb
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 33
     Manual annotation: ('next(os.walk(path)', 'Method')
         Tokenizer matches: []
     Manual annotation: ('no', 'DT')
         Tokenizer matches: [('no', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('paths', 'Variable')
         Tokenizer matches: [('paths', 'NNS')]
             false positive POS tag match: variable
     Manual annotation: ('absolute', 'JJ')
         Tokenizer matches: [('absolute', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('pathnames', 'NNS')
         Tokenizer matches: [('pathnames', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('files', 'NNS')
         Tokenizer matches: [('files', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('2', 'CD')
         Tokenizer matches: []
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('only', 'JJ')
         Tokenizer matches: [('only', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('os.path.join(path,fn)', 'Method')
         Tokenizer matches: [('os.path.join(path,fn)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('A', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('one-line', 'JJ')
         Tokenizer matches: [('one-line', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('get', 'VB')
         Tokenizer matches: [('get', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('subdirectories', 'NNS')
         Tokenizer matches: [('subdirectories', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('filenames', 'Variable')
         Tokenizer matches: [('filenames', 'NNS')]
             false positive POS tag match: variable
     Manual annotation: ('next(os.walk(path))', 'Method')
         Tokenizer matches: [('next(os.walk(path))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('fn', 'Variable')
         Tokenizer matches: [('fn', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('or', 'CC')
         Tokenizer matches: [('or', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('solution', 'NN')
         Tokenizer matches: [('solution', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 34
     Manual annotation: ('# returns a list of names (with extension, without full path) of all files', 'Comment')
         Tokenizer matches: [('# returns a list of names (with extension, without full path) of all files', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('os.path.isfile(os.path.join(path, name))', 'Method')
         Tokenizer matches: [('os.path.isfile(os.path.join(path, name))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('files', 'NNS')
         Tokenizer matches: [('files', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('files.append(name)', 'Method')
         Tokenizer matches: [('files.append(name)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('name', 'Variable')
         Tokenizer matches: [('name', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('return', 'Operator')
         Tokenizer matches: []
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('list_files(path)', 'Method')
         Tokenizer matches: [('list_files(path)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('# in folder path', 'Comment')
         Tokenizer matches: [('# in folder path', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('files', 'Variable')
         Tokenizer matches: [('files', 'NNS')]
             false positive POS tag match: variable
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('os.listdir(path)', 'Method')
         Tokenizer matches: [('os.listdir(path)', 'METHOD')]
             true positive POS tag match: method
Post: 35-1
     Manual annotation: ('file.is_symlink()', 'Method')
         Tokenizer matches: [('file.is_symlink()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('faster', 'JJ')
         Tokenizer matches: [('faster', 'JJR')]
             true positive POS tag match: jj
     Manual annotation: ('new', 'JJ')
         Tokenizer matches: [('new', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ("os.scandir('/usr/bin')", 'Method')
         Tokenizer matches: [("os.scandir('/usr/bin')", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('Example', 'NN')
         Tokenizer matches: [('example', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('if', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('walking', 'VBG')
         Tokenizer matches: [('walking', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('elif', 'Operator')
         Tokenizer matches: [('elif', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('os.scandir()', 'Method')
         Tokenizer matches: [('os.scandir()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('print("{}{}".format(line, file.name))', 'Method')
         Tokenizer matches: [('print("{}{}".format(line, file.name))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('+=', 'Operator')
         Tokenizer matches: [('+=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('introduced', 'VBN')
         Tokenizer matches: [('introduced', 'VBN')]
             true positive POS tag match: vbn
     Manual annotation: ('method', 'NN')
         Tokenizer matches: [('method', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('line', 'Variable')
         Tokenizer matches: [('line', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('file.is_dir()', 'Method')
         Tokenizer matches: [('file.is_dir()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('file.is_file()', 'Method')
         Tokenizer matches: [('file.is_file()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('through', 'IN')
         Tokenizer matches: [('through', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('3.5', 'CD')
         Tokenizer matches: []
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('directory', 'NN')
         Tokenizer matches: [('directory', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('file', 'Variable')
         Tokenizer matches: [('file', 'NN')]
             false positive POS tag match: variable
Post: 36
     Manual annotation: ('over', 'IN')
         Tokenizer matches: [('over', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('append', 'VB')
         Tokenizer matches: [('append', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('result', 'NN')
         Tokenizer matches: [('result', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('iterate', 'VB')
         Tokenizer matches: [('iterate', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('We', 'PRP')
         Tokenizer matches: [('we', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('content_list', 'UNK')
         Tokenizer matches: [('content_list', 'VARIABLE')]
             false positive POS tag match: unk
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('module', 'NN')
         Tokenizer matches: [('module', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('print', 'VB')
         Tokenizer matches: []
     Manual annotation: ('use', 'VB')
         Tokenizer matches: [('use', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('content.os.listdir(".")', 'Method')
         Tokenizer matches: [('content.os.listdir(".")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('# "." means current directory', 'Comment')
         Tokenizer matches: [('# "." means current directory', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('all', 'DT')
         Tokenizer matches: [('all', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('os', 'UNK')
         Tokenizer matches: [('os', 'NNS')]
             false positive POS tag match: unk
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('[]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('contents', 'NNS')
         Tokenizer matches: [('contents', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('listing', 'VBG')
         Tokenizer matches: []
     Manual annotation: ('should', 'MD')
         Tokenizer matches: [('should', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('os.listdir(".")', 'Method')
         Tokenizer matches: [('os.listdir(".")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('directory', 'NN')
         Tokenizer matches: [('directory', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('returns', 'VBZ')
         Tokenizer matches: [('returns', 'NNS')]
             false positive POS tag match: vbz
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('content_list', 'Variable')
         Tokenizer matches: [('content_list', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('content', 'Variable')
         Tokenizer matches: [('content', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('content_list.append(content)', 'Method')
         Tokenizer matches: [('content_list.append(content)', 'METHOD')]
             true positive POS tag match: method
Post: 37
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('found_files', 'Variable')
         Tokenizer matches: [('found_files', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('found_files', 'Operand')
         Tokenizer matches: [('found_files', 'VARIABLE')]
             false positive POS tag match: operand
     Manual annotation: ('So', 'VB')
         Tokenizer matches: [('so', 'RB')]
             false positive POS tag match: vb
     Manual annotation: ('PyPI', 'NNP')
         Tokenizer matches: [('pypi', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('findtools.find_files', 'UNK')
         Tokenizer matches: [('findtools.find_files', 'VARIABLE')]
             false positive POS tag match: unk
     Manual annotation: ('someone', 'NN')
         Tokenizer matches: [('someone', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('this', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('implementation', 'NN')
         Tokenizer matches: [('implementation', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('package', 'NN')
         Tokenizer matches: [('package', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('recipe', 'NN')
         Tokenizer matches: [('recipe', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('hope', 'VBP')
         Tokenizer matches: [('hope', 'NN')]
             false positive POS tag match: vbp
     Manual annotation: ("find_files(path='/usr/bin', match=sh_files_pattern)", 'Method')
         Tokenizer matches: [("find_files(path='/usr/bin', match=sh_files_pattern)", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('made', 'VBD')
         Tokenizer matches: [('made', 'NN')]
             false positive POS tag match: vbd
     Manual annotation: ('out', 'IN')
         Tokenizer matches: [('out', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('frequently', 'RB')
         Tokenizer matches: [('frequently', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ("Match(filetype='f', name='*.sh')", 'Method')
         Tokenizer matches: [("match(filetype='f', name='*.sh')", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('found_file', 'Variable')
         Tokenizer matches: [('found_file', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('it', 'DT')
         Tokenizer matches: [('it', 'PRP')]
             false positive POS tag match: dt
     Manual annotation: ('# Recursively find all *.sh files in **/usr/bin**', 'Comment')
         Tokenizer matches: [('# recursively find all *.sh files in **/usr/bin**', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('use', 'VBP')
         Tokenizer matches: [('use', 'NN')]
             false positive POS tag match: vbp
     Manual annotation: ('GitHub', 'NNP')
         Tokenizer matches: [('github', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('print', 'VB')
         Tokenizer matches: []
     Manual annotation: ('I', 'PRP')
         Tokenizer matches: [('i', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('useful', 'JJ')
         Tokenizer matches: [('useful', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('If', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('also', 'RB')
         Tokenizer matches: [('also', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('find', 'VB')
         Tokenizer matches: []
     Manual annotation: ('rather', 'RB')
         Tokenizer matches: [('rather', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('code', 'NN')
         Tokenizer matches: [('code', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('are', 'VBP')
         Tokenizer matches: [('are', 'VBP')]
             true positive POS tag match: vbp
     Manual annotation: ('found_file', 'UNK')
         Tokenizer matches: [('found_file', 'VARIABLE')]
             false positive POS tag match: unk
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('that', 'IN')
         Tokenizer matches: [('that', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'JJ')]
             false positive POS tag match: nnp
     Manual annotation: ('looking', 'VBG')
         Tokenizer matches: []
     Manual annotation: ('finds', 'VBZ')
         Tokenizer matches: []
     Manual annotation: ('repository', 'NN')
         Tokenizer matches: [('repository', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('find_files', 'UNK')
         Tokenizer matches: [('find_files', 'VARIABLE')]
             false positive POS tag match: unk
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('there', 'RB')
         Tokenizer matches: [('there', 'EX')]
             false positive POS tag match: rb
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('sh_files_pattern', 'Variable')
         Tokenizer matches: [('sh_files_pattern', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('otentially', 'RB')
         Tokenizer matches: []
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 38
     Manual annotation: ("get_files('.')", 'Method')
         Tokenizer matches: [("get_files('.')", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('os.walk(search_path)', 'Method')
         Tokenizer matches: [('os.walk(search_path)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('filenames', 'Variable')
         Tokenizer matches: [('filenames', 'NNS')]
             false positive POS tag match: variable
     Manual annotation: ('filename', 'Variable')
         Tokenizer matches: [('filename', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('os.path.join(dirpath, filename)', 'Method')
         Tokenizer matches: [('os.path.join(dirpath, filename)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('yield', 'VB')
         Tokenizer matches: [('yield', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('list_files', 'Operand')
         Tokenizer matches: [('list_files', 'VARIABLE')]
             false positive POS tag match: operand
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('list_files', 'Variable')
         Tokenizer matches: [('list_files', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('generators', 'NNS')
         Tokenizer matches: [('generators', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('get_files(search_path)', 'Method')
         Tokenizer matches: [('get_files(search_path)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('os', 'UNK')
         Tokenizer matches: [('os', 'NNS')]
             false positive POS tag match: unk
     Manual annotation: ('Using', 'VBG')
         Tokenizer matches: []
     Manual annotation: ('dirpath', 'Variable')
         Tokenizer matches: [('dirpath', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('print(filename)', 'Method')
         Tokenizer matches: [('print(filename)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('filenames', 'Operand')
         Tokenizer matches: [('filenames', 'NNS')]
             false positive POS tag match: operand
Post: 39
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('flatten(l, a)', 'Method')
         Tokenizer matches: [('flatten(l, a)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('return', 'Operator')
         Tokenizer matches: []
     Manual annotation: ('flatten(i, a)', 'Method')
         Tokenizer matches: [('flatten(i, a)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('# [1, 1, 1, 3, 4, 5, 2, 3, 4, 5, 6]', 'Comment')
         Tokenizer matches: [('# [1, 1, 1, 3, 4, 5, 2, 3, 4, 5, 6]', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('isinstance(i, list)', 'Method')
         Tokenizer matches: [('isinstance(i, list)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('print(flatten([[[1, [1,1, [3, [4,5,]]]], 2, 3], [4, 5],6], []))', 'Method')
         Tokenizer matches: [('print(flatten([[[1, [1,1, [3, [4,5,]]]], 2, 3], [4, 5],6], []))', 'METHOD')]
             true positive POS tag match: method
Post: 4
     Manual annotation: ('x.copy()', 'Method')
         Tokenizer matches: [('x.copy()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('z', 'Variable')
         Tokenizer matches: [('z', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('alternative', 'NN')
         Tokenizer matches: [('alternative', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('z.update(y)', 'Method')
         Tokenizer matches: [('z.update(y)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('An', 'DT')
         Tokenizer matches: [('an', 'DT')]
             true positive POS tag match: dt
Post: 40
     Manual annotation: ('flatten(l, a=[])', 'Method')
         Tokenizer matches: [('flatten(l, a=[])', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('Example', 'NN')
         Tokenizer matches: [('example', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('@Deleet', 'UNK')
         Tokenizer matches: []
     Manual annotation: ('daList', 'Variable')
         Tokenizer matches: [('dalist', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('https://repl.it/G8mb/0', 'URL')
         Tokenizer matches: [('https://repl.it/g8mb/0', 'URL')]
             true positive POS tag match: url
     Manual annotation: ('up', 'RP')
         Tokenizer matches: [('up', 'IN')]
             false positive POS tag match: rp
     Manual annotation: ('Cleaned', 'VBN')
         Tokenizer matches: [('cleaned', 'VBD')]
             false positive POS tag match: vbn
     Manual annotation: ('collections', 'NNS')
         Tokenizer matches: [('collections', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('example', 'NN')
         Tokenizer matches: [('example', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('print(flatten(daList))', 'Method')
         Tokenizer matches: [('print(flatten(dalist))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('Iterable', 'NN')
         Tokenizer matches: [('iterable', 'JJ')]
             false positive POS tag match: nn
     Manual annotation: ('isinstance(i, Iterable)', 'Method')
         Tokenizer matches: [('isinstance(i, iterable)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('flatten(i, a)', 'Method')
         Tokenizer matches: [('flatten(i, a)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('return', 'Operator')
         Tokenizer matches: [('return', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('[[1,4],[5,6],[23,22,234,2],[2], [ [[1,2],[1,2]],[[11,2],[11,22]] ] ]', 'Operand')
         Tokenizer matches: []
Post: 41
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('wat.get_x()', 'Method')
         Tokenizer matches: [('wat.get_x()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('Your', 'PRP_')
         Tokenizer matches: [('your', 'PRP$')]
             true positive POS tag match: prp_
     Manual annotation: ('return', 'VB')
         Tokenizer matches: [('return', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('one-liner', 'NN')
         Tokenizer matches: [('one-liner', 'JJ')]
             false positive POS tag match: nn
     Manual annotation: ('class', 'Operator')
         Tokenizer matches: [('class', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('self.x', 'Variable')
         Tokenizer matches: [('self.x', 'JJ')]
             false positive POS tag match: variable
     Manual annotation: ('may', 'MD')
         Tokenizer matches: [('may', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('__init__(self)', 'Method')
         Tokenizer matches: [('__init__(self)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('c()', 'Method')
         Tokenizer matches: [('c()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('be', 'VB')
         Tokenizer matches: [('be', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('want', 'VBP')
         Tokenizer matches: [('want', 'NN')]
             false positive POS tag match: vbp
     Manual annotation: ('how', 'WRB')
         Tokenizer matches: [('how', 'WRB')]
             true positive POS tag match: wrb
     Manual annotation: ('use', 'VBP')
         Tokenizer matches: [('use', 'NN')]
             false positive POS tag match: vbp
     Manual annotation: ('This', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('instantiated', 'VBN')
         Tokenizer matches: [('instantiated', 'VBN')]
             true positive POS tag match: vbn
     Manual annotation: ('not', 'RB')
         Tokenizer matches: [('not', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('eagerly', 'RB')
         Tokenizer matches: [('eagerly', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('object', 'NN')
         Tokenizer matches: [('object', 'VBP')]
             false positive POS tag match: nn
     Manual annotation: ('@singleton', 'UNK')
         Tokenizer matches: []
     Manual annotation: ('singleton', 'Variable')
         Tokenizer matches: [('singleton', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('get_x(self)', 'Method')
         Tokenizer matches: [('get_x(self)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('c', 'UNK')
         Tokenizer matches: [('c', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('self.x', 'UNK')
         Tokenizer matches: [('self.x', 'JJ')]
             false positive POS tag match: unk
     Manual annotation: ('assert', 'VB')
         Tokenizer matches: [('assert', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('gets', 'VBZ')
         Tokenizer matches: [('gets', 'NNS')]
             false positive POS tag match: vbz
     Manual annotation: ('1', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('or', 'CC')
         Tokenizer matches: [('or', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('Here', 'RB')
         Tokenizer matches: [('here', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('lambda', 'Operand')
         Tokenizer matches: [('lambda', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'VB')]
             false positive POS tag match: operator
     Manual annotation: ('what', 'WP')
         Tokenizer matches: [('what', 'WP')]
             true positive POS tag match: wp
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('wat(object)', 'Method')
         Tokenizer matches: [('wat(object)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('==', 'Operator')
         Tokenizer matches: [('==', 'OPERATOR')]
             true positive POS tag match: operator
Post: 42
     Manual annotation: ('using', 'VBG')
         Tokenizer matches: [('using', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('When', 'WRB')
         Tokenizer matches: [('when', 'WRB')]
             true positive POS tag match: wrb
     Manual annotation: ('case', 'NN')
         Tokenizer matches: [('case', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('1', 'CD')
         Tokenizer matches: []
     Manual annotation: ('this', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('loop', 'NN')
         Tokenizer matches: [('loop', 'VBP')]
             false positive POS tag match: nn
     Manual annotation: ('following', 'NN')
         Tokenizer matches: [('following', 'VBG')]
             false positive POS tag match: nn
     Manual annotation: ('[8, 23, 45, 12, 78]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('how', 'WRB')
         Tokenizer matches: [('how', 'WRB')]
             true positive POS tag match: wrb
     Manual annotation: ('index', 'NN')
         Tokenizer matches: [('index', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('5', 'CD')
         Tokenizer matches: []
     Manual annotation: ('loop', 'VBP')
         Tokenizer matches: [('loop', 'VBP')]
             true positive POS tag match: vbp
     Manual annotation: ('I', 'PRP')
         Tokenizer matches: [('i', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('through', 'IN')
         Tokenizer matches: [('through', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('itself', 'PRP')
         Tokenizer matches: [('itself', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('ints', 'Variable')
         Tokenizer matches: [('ints', 'NNS')]
             false positive POS tag match: variable
     Manual annotation: ('access', 'VB')
         Tokenizer matches: [('access', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('like', 'IN')
         Tokenizer matches: [('like', 'VB')]
             false positive POS tag match: in
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('do', 'VBP')
         Tokenizer matches: [('do', 'VBP')]
             true positive POS tag match: vbp
     Manual annotation: ('How', 'WRB')
         Tokenizer matches: [('how', 'WRB')]
             true positive POS tag match: wrb
Post: 43
     Manual annotation: ('range(len(ints))', 'Method')
         Tokenizer matches: [('range(len(ints))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('print', 'VB')
         Tokenizer matches: []
     Manual annotation: ('i', 'UNK')
         Tokenizer matches: [('i', 'PRP')]
             false positive POS tag match: unk
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('ints[i]', 'UNK')
         Tokenizer matches: []
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('i', 'Variable')
         Tokenizer matches: [('i', 'PRP')]
             false positive POS tag match: variable
Post: 44
     Manual annotation: ('other', 'JJ')
         Tokenizer matches: [('other', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('start', 'VB')
         Tokenizer matches: [('start', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('0', 'CD')
         Tokenizer matches: []
     Manual annotation: ('enumerate(iterable, start=1)', 'Method')
         Tokenizer matches: [('enumerate(iterable, start=1)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('simple', 'JJ')
         Tokenizer matches: [('simple', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('index', 'UNK')
         Tokenizer matches: [('index', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('than', 'IN')
         Tokenizer matches: [('than', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('pretty', 'RB')
         Tokenizer matches: [('pretty', 'NN')]
             false positive POS tag match: rb
     Manual annotation: ('1', 'CD')
         Tokenizer matches: []
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('It', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('index', 'Variable')
         Tokenizer matches: [('index', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
Post: 45
     Manual annotation: ('using', 'VBG')
         Tokenizer matches: [('using', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('type(f)', 'Method')
         Tokenizer matches: [('type(f)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ("'list'", 'String')
         Tokenizer matches: [("'list'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('()', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('do', 'VB')
         Tokenizer matches: [('do', 'VBP')]
             true positive POS tag match: vb
     Manual annotation: ('f', 'Variable')
         Tokenizer matches: [('f', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ("'tuple'", 'String')
         Tokenizer matches: [("'tuple'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('type(a)', 'Method')
         Tokenizer matches: [('type(a)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('type', 'NN')
         Tokenizer matches: [('type', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('that', 'DT')
         Tokenizer matches: [('that', 'WDT')]
             true positive POS tag match: dt
     Manual annotation: ('a', 'Variable')
         Tokenizer matches: [('a', 'DT')]
             false positive POS tag match: variable
     Manual annotation: ('type()', 'Method')
         Tokenizer matches: [('type()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('[]', 'Operand')
         Tokenizer matches: []
Post: 46
     Manual annotation: ('random_index', 'Variable')
         Tokenizer matches: [('random_index', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('randrange', 'UNK')
         Tokenizer matches: [('randrange', 'VB')]
             false positive POS tag match: unk
     Manual annotation: ('foo', 'Variable')
         Tokenizer matches: [('foo', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ("['a', 'b', 'c', 'd', 'e']", 'Operand')
         Tokenizer matches: []
     Manual annotation: ('case', 'NN')
         Tokenizer matches: [('case', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('also', 'RB')
         Tokenizer matches: [('also', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('need', 'VBP')
         Tokenizer matches: [('need', 'NN')]
             false positive POS tag match: vbp
     Manual annotation: ('random', 'NN')
         Tokenizer matches: [('random', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('In', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('randrange(0,len(foo))', 'Method')
         Tokenizer matches: [('randrange(0,len(foo))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('foo[random_index]', 'UNK')
         Tokenizer matches: []
     Manual annotation: ('index', 'NN')
         Tokenizer matches: [('index', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
Post: 47
     Manual annotation: ('just', 'RB')
         Tokenizer matches: [('just', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('foo', 'UNK')
         Tokenizer matches: [('foo', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('does', 'VB')
         Tokenizer matches: [('does', 'VBZ')]
             true positive POS tag match: vb
     Manual annotation: ('if', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('use', 'VB')
         Tokenizer matches: [('use', 'VBP')]
             true positive POS tag match: vb
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('foo', 'Variable')
         Tokenizer matches: [('foo', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('same', 'JJ')
         Tokenizer matches: [('same', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ("['a', 'b', 'c', 'd', 'e']", 'Operand')
         Tokenizer matches: []
     Manual annotation: ('random.choice', 'UNK')
         Tokenizer matches: [('random.choice', 'URL')]
             false positive POS tag match: unk
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('need', 'VBP')
         Tokenizer matches: [('need', 'NN')]
             false positive POS tag match: vbp
     Manual annotation: ('random', 'NN')
         Tokenizer matches: [('random', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('int(random.random() * len(foo))', 'Method')
         Tokenizer matches: [('int(random.random() * len(foo))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('index', 'NN')
         Tokenizer matches: [('index', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
Post: 48
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('[1, 2, 3]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('I', 'PRP')
         Tokenizer matches: [('i', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('two', 'CD')
         Tokenizer matches: [('two', 'CD')]
             true positive POS tag match: cd
     Manual annotation: ('listtwo', 'Variable')
         Tokenizer matches: [('listtwo', 'CD')]
             false positive POS tag match: variable
     Manual annotation: ('Example', 'NN')
         Tokenizer matches: [('example', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('outcome', 'NN')
         Tokenizer matches: [('outcome', 'VBP')]
             false positive POS tag match: nn
     Manual annotation: ('joinedlist', 'Variable')
         Tokenizer matches: [('joinedlist', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('==', 'Operator')
         Tokenizer matches: [('==', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('[1, 2, 3, 4, 5, 6]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('lists', 'NNS')
         Tokenizer matches: [('lists', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('concatenate', 'VB')
         Tokenizer matches: [('concatenate', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('[4, 5, 6]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('listone', 'Variable')
         Tokenizer matches: [('listone', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('do', 'VBP')
         Tokenizer matches: [('do', 'NN')]
             false positive POS tag match: vbp
     Manual annotation: ('How', 'WRB')
         Tokenizer matches: [('how', 'WRB')]
             true positive POS tag match: wrb
     Manual annotation: ('Expected', 'VBN')
         Tokenizer matches: [('expected', 'VBN')]
             true positive POS tag match: vbn
Post: 49
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('ridiculously', 'RB')
         Tokenizer matches: [('ridiculously', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('+', 'Operator')
         Tokenizer matches: [('+', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('easy', 'JJ')
         Tokenizer matches: [('easy', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('listone', 'Operand')
         Tokenizer matches: [('listone', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('mergedlist', 'Variable')
         Tokenizer matches: [('mergedlist', 'VBP')]
             false positive POS tag match: variable
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('this', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('makes', 'VBZ')
         Tokenizer matches: [('makes', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('listtwo', 'Operand')
         Tokenizer matches: [('listtwo', 'CD')]
             false positive POS tag match: operand
Post: 5
     Manual annotation: ('448', 'CD')
         Tokenizer matches: []
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('3.5', 'CD')
         Tokenizer matches: []
     Manual annotation: ('y', 'Variable')
         Tokenizer matches: [('y', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ("{'a': 2, 'c': 2}", 'Operand')
         Tokenizer matches: []
     Manual annotation: ('final', 'Variable')
         Tokenizer matches: [('final', 'JJ')]
             false positive POS tag match: variable
     Manual annotation: ('Or', 'CC')
         Tokenizer matches: [('or', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ("{'a': 1, 'b': 1, **x, **y}", 'Operand')
         Tokenizer matches: []
     Manual annotation: ('x', 'Variable')
         Tokenizer matches: [('x', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ("{'a': 1, 'b': 1}", 'Operand')
         Tokenizer matches: []
     Manual annotation: ('even', 'RB')
         Tokenizer matches: [('even', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('syntax', 'NN')
         Tokenizer matches: [('syntax', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('option', 'NN')
         Tokenizer matches: [('option', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('nicer', 'JJR')
         Tokenizer matches: [('nicer', 'NN')]
             false positive POS tag match: jjr
     Manual annotation: ("# {'a': 2, 'b': 1, 'c': 2}", 'Comment')
         Tokenizer matches: [("# {'a': 2, 'b': 1, 'c': 2}", 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('{**x, **y}', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('PEP', 'NNP')
         Tokenizer matches: [('pep', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('allows', 'VBZ')
         Tokenizer matches: [('allows', 'VBZ')]
             true positive POS tag match: vbz
Post: 50
     Manual annotation: ('obtain', 'VB')
         Tokenizer matches: [('obtain', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('list(set(listone + listtwo))', 'Method')
         Tokenizer matches: [('list(set(listone + listtwo))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('merged', 'VBN')
         Tokenizer matches: [('merged', 'JJ')]
             false positive POS tag match: vbn
     Manual annotation: ('use', 'VB')
         Tokenizer matches: [('use', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('sets', 'NNS')
         Tokenizer matches: [('sets', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('values', 'NNS')
         Tokenizer matches: [('values', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('unique', 'JJ')
         Tokenizer matches: [('unique', 'VBP')]
             false positive POS tag match: jj
     Manual annotation: ('mergedlist', 'Variable')
         Tokenizer matches: [('mergedlist', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 51
     Manual annotation: ('extend', 'VB')
         Tokenizer matches: [('extend', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('[4,5,6]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('one', 'NN')
         Tokenizer matches: [('one', 'CD')]
             false positive POS tag match: nn
     Manual annotation: ('could', 'MD')
         Tokenizer matches: [('could', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('[1,2,3]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('add', 'VB')
         Tokenizer matches: [('add', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('listtwo', 'Variable')
         Tokenizer matches: [('listtwo', 'CD')]
             false positive POS tag match: variable
     Manual annotation: ('end', 'NN')
         Tokenizer matches: [('end', 'VBP')]
             false positive POS tag match: nn
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('order', 'NN')
         Tokenizer matches: [('order', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('mergedlist', 'Variable')
         Tokenizer matches: [('mergedlist', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('listone', 'Variable')
         Tokenizer matches: [('listone', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('another', 'DT')
         Tokenizer matches: [('another', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('use', 'VB')
         Tokenizer matches: [('use', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('mergedlist.extend(listone)', 'Method')
         Tokenizer matches: [('mergedlist.extend(listone)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('also', 'RB')
         Tokenizer matches: [('also', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('mergedlist.extend(listtwo)', 'Method')
         Tokenizer matches: [('mergedlist.extend(listtwo)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('[]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 52
     Manual annotation: ('new_list', 'Variable')
         Tokenizer matches: [('new_list', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('list(old_list)', 'Method')
         Tokenizer matches: [('list(old_list)', 'METHOD')]
             true positive POS tag match: method
Post: 53
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('doing', 'VBG')
         Tokenizer matches: [('doing', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('oldList[:]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('this', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('newList', 'Variable')
         Tokenizer matches: [('newlist', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('idiom', 'NN')
         Tokenizer matches: [('idiom', 'NN')]
             true positive POS tag match: nn
Post: 54
     Manual annotation: ("g.send('restart')", 'Method')
         Tokenizer matches: [("g.send('restart')", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('init()', 'Method')
         Tokenizer matches: [('init()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('==', 'Operator')
         Tokenizer matches: [('==', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('0', 'CD')
         Tokenizer matches: []
     Manual annotation: ('(yield i)', 'Operand')
         Tokenizer matches: []
     Manual annotation: ("'restart", 'String')
         Tokenizer matches: [("'restart", 'NN')]
             false positive POS tag match: string
     Manual annotation: ('g', 'Variable')
         Tokenizer matches: [('g', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('2', 'CD')
         Tokenizer matches: []
     Manual annotation: ('True', 'Operand')
         Tokenizer matches: [('true', 'JJ')]
             false positive POS tag match: operand
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('1', 'CD')
         Tokenizer matches: []
     Manual annotation: ('val', 'Variable')
         Tokenizer matches: [('val', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('while', 'Operator')
         Tokenizer matches: [('while', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('g.next()', 'Method')
         Tokenizer matches: [('g.next()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('3', 'CD')
         Tokenizer matches: []
     Manual annotation: ('gen()', 'Method')
         Tokenizer matches: [('gen()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('i', 'Variable')
         Tokenizer matches: [('i', 'PRP')]
             false positive POS tag match: variable
Post: 55
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('times', 'NNS')
         Tokenizer matches: [('times', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('return', 'VB')
         Tokenizer matches: [('return', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('Now', 'RB')
         Tokenizer matches: [('now', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('f()(generator_args)', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('FunctionWithYield(generator_args)', 'Method')
         Tokenizer matches: [('functionwithyield(generator_args)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('print(x)', 'Method')
         Tokenizer matches: [('print(x)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('here', 'RB')
         Tokenizer matches: [('here', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('FunctionWithYield', 'UNK')
         Tokenizer matches: [('functionwithyield', 'VBN')]
             false positive POS tag match: unk
     Manual annotation: ('that', 'DT')
         Tokenizer matches: [('that', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('just', 'RB')
         Tokenizer matches: [('just', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('like', 'VBP')
         Tokenizer matches: [('like', 'IN')]
             false positive POS tag match: vbp
     Manual annotation: ('function', 'NN')
         Tokenizer matches: [('function', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('x', 'Variable')
         Tokenizer matches: [('x', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('code', 'NN')
         Tokenizer matches: [('code', 'VBP')]
             false positive POS tag match: nn
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('define', 'VB')
         Tokenizer matches: []
     Manual annotation: ('generator', 'NN')
         Tokenizer matches: [('generator', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('many', 'JJ')
         Tokenizer matches: [('many', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('do', 'VB')
         Tokenizer matches: [('do', 'VBP')]
             true positive POS tag match: vb
     Manual annotation: ('as', 'IN')
         Tokenizer matches: [('as', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('returns', 'VBZ')
         Tokenizer matches: [('returns', 'NNS')]
             false positive POS tag match: vbz
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('f()', 'Method')
         Tokenizer matches: [('f()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('your', 'PRP_')
         Tokenizer matches: [('your', 'PRP$')]
             true positive POS tag match: prp_
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
Post: 56
     Manual annotation: ('is_fat', 'Variable')
         Tokenizer matches: [('is_fat', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('use', 'VB')
         Tokenizer matches: [('use', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('"not fat"', 'Operand')
         Tokenizer matches: [('"not fat"', 'STRING')]
             false positive POS tag match: operand
     Manual annotation: ('Yes', 'UH')
         Tokenizer matches: [('yes', 'NNS')]
             false positive POS tag match: uh
     Manual annotation: ('True', 'NN')
         Tokenizer matches: [('true', 'VBP')]
             false positive POS tag match: nn
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('way', 'NN')
         Tokenizer matches: [('way', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('state', 'Variable')
         Tokenizer matches: [('state', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('that', 'DT')
         Tokenizer matches: [('that', 'IN')]
             false positive POS tag match: dt
     Manual annotation: ('else', 'Operator')
         Tokenizer matches: [('else', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('"fat"', 'String')
         Tokenizer matches: [('"fat"', 'STRING')]
             true positive POS tag match: string
Post: 57
     Manual annotation: ('peasy', 'UNK')
         Tokenizer matches: [('peasy', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ("'String nok'", 'String')
         Tokenizer matches: [("'string nok'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('conditional', 'JJ')
         Tokenizer matches: [('conditional', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('else', 'Operator')
         Tokenizer matches: [('else', 'RB')]
             false positive POS tag match: operator
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('value', 'Variable')
         Tokenizer matches: [('value', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ("'ok'", 'String')
         Tokenizer matches: [("'ok'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ("'String ok'", 'String')
         Tokenizer matches: [("'string ok'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('Easy', 'JJ')
         Tokenizer matches: [('easy', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('expression', 'NN')
         Tokenizer matches: [('expression', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('It', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('==', 'Operator')
         Tokenizer matches: [('==', 'OPERATOR')]
             true positive POS tag match: operator
Post: 58
     Manual annotation: ('much', 'JJ')
         Tokenizer matches: [('much', 'RB')]
             false positive POS tag match: jj
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('p', 'Variable')
         Tokenizer matches: [('p', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('has', 'RB')
         Tokenizer matches: [('has', 'VBZ')]
             false positive POS tag match: rb
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('p.returncode', 'UNK')
         Tokenizer matches: [('p.returncode', 'URL')]
             false positive POS tag match: unk
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('Popen', 'UNK')
         Tokenizer matches: [('popen', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('p.communicate()', 'Method')
         Tokenizer matches: [('p.communicate()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('PIPE', 'UNK')
         Tokenizer matches: [('pipe', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('commands', 'NNS')
         Tokenizer matches: [('commands', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('err', 'Variable')
         Tokenizer matches: [('err', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('Popen(cmd , shell=True, stdout=PIPE, stderr=PIPE)', 'Method')
         Tokenizer matches: [('popen(cmd , shell=true, stdout=pipe, stderr=pipe)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('how', 'WRB')
         Tokenizer matches: [('how', 'WRB')]
             true positive POS tag match: wrb
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('everything', 'NN')
         Tokenizer matches: [('everything', 'VBG')]
             false positive POS tag match: nn
     Manual annotation: ('out', 'Variable')
         Tokenizer matches: [('out', 'IN')]
             false positive POS tag match: variable
     Manual annotation: ('I', 'PRP')
         Tokenizer matches: [('i', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('This', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('"Return code: "', 'String')
         Tokenizer matches: [('"return code: "', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('run', 'VBP')
         Tokenizer matches: [('run', 'VBN')]
             false positive POS tag match: vbp
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('need', 'VBP')
         Tokenizer matches: [('need', 'VBP')]
             true positive POS tag match: vbp
     Manual annotation: ('code', 'NN')
         Tokenizer matches: [('code', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('"ls -l ~/"', 'String')
         Tokenizer matches: [('"ls -l ~/"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('out.rstrip()', 'Method')
         Tokenizer matches: [('out.rstrip()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('subprocess', 'NN')
         Tokenizer matches: [('subprocess', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('err.rstrip()', 'Method')
         Tokenizer matches: [('err.rstrip()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('pretty', 'RB')
         Tokenizer matches: [('pretty', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('my', 'PRP_')
         Tokenizer matches: [('my', 'PRP$')]
             true positive POS tag match: prp_
     Manual annotation: ('cmd', 'Variable')
         Tokenizer matches: [('cmd', 'NN')]
             false positive POS tag match: variable
Post: 59
     Manual annotation: ("os.system('cat testfile')", 'Method')
         Tokenizer matches: [("os.system('cat testfile')", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('simple', 'JJ')
         Tokenizer matches: [('simple', 'VBP')]
             false positive POS tag match: jj
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('or', 'CC')
         Tokenizer matches: [('or', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('https://docs.python.org/2/library/subprocess.html', 'URL')
         Tokenizer matches: [('https://docs.python.org/2/library/subprocess.html', 'URL')]
             true positive POS tag match: url
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('os', 'UNK')
         Tokenizer matches: [('os', 'NNS')]
             false positive POS tag match: unk
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('very', 'RB')
         Tokenizer matches: [('very', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('command', 'NN')
         Tokenizer matches: [('command', 'NN')]
             true positive POS tag match: nn
Post: 6
     Manual annotation: ('z4', 'Variable')
         Tokenizer matches: [('z4', 'NNP')]
             false positive POS tag match: variable
     Manual annotation: ('change', 'VB')
         Tokenizer matches: [('change', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('times', 'NNS')
         Tokenizer matches: [('times', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('but', 'CC')
         Tokenizer matches: [('but', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('this', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('yet', 'RB')
         Tokenizer matches: [('yet', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('While', 'IN')
         Tokenizer matches: [('while', 'IN')]
             true positive POS tag match: in
     Manual annotation: ("{'b':10, 'c': 11}", 'Operand')
         Tokenizer matches: []
     Manual annotation: ('{}', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('y', 'Variable')
         Tokenizer matches: [('y', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('several', 'JJ')
         Tokenizer matches: [('several', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('question', 'NN')
         Tokenizer matches: [('question', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('answered', 'VBN')
         Tokenizer matches: [('answered', 'VBN')]
             true positive POS tag match: vbn
     Manual annotation: ('easy', 'JJ')
         Tokenizer matches: [('easy', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('problem', 'NN')
         Tokenizer matches: [('problem', 'VB')]
             false positive POS tag match: nn
     Manual annotation: ('fast', 'RB')
         Tokenizer matches: [('fast', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('z0', 'UNK')
         Tokenizer matches: [('z0', 'NNP')]
             false positive POS tag match: unk
     Manual annotation: ('been', 'VBD')
         Tokenizer matches: [('been', 'VBN')]
             false positive POS tag match: vbd
     Manual annotation: ('above', 'IN')
         Tokenizer matches: [('above', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('z4.update(x)', 'Method')
         Tokenizer matches: [('z4.update(x)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('x', 'Variable')
         Tokenizer matches: [('x', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('evil', 'JJ')
         Tokenizer matches: [('evil', 'VBP')]
             false positive POS tag match: jj
     Manual annotation: ('not', 'RB')
         Tokenizer matches: [('not', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('understand', 'VB')
         Tokenizer matches: [('understand', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('has', 'VBZ')
         Tokenizer matches: [('has', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('mentioned', 'VBN')
         Tokenizer matches: [('mentioned', 'VBD')]
             false positive POS tag match: vbn
     Manual annotation: ('It', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('listed', 'VBN')
         Tokenizer matches: [('listed', 'VBN')]
             true positive POS tag match: vbn
     Manual annotation: ('already', 'RB')
         Tokenizer matches: [('already', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ("{'a':1, 'b': 2}", 'Operand')
         Tokenizer matches: []
     Manual annotation: ('z2', 'UNK')
         Tokenizer matches: [('z2', 'NNP')]
             false positive POS tag match: unk
     Manual annotation: ('simple', 'JJ')
         Tokenizer matches: [('simple', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('as', 'IN')
         Tokenizer matches: [('as', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('solution', 'NN')
         Tokenizer matches: [('solution', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('z4.update(y)', 'Method')
         Tokenizer matches: [('z4.update(y)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('as', 'RB')
         Tokenizer matches: [('as', 'IN')]
             false positive POS tag match: rb
Post: 60
     Manual annotation: ('instead', 'RB')
         Tokenizer matches: []
     Manual annotation: ('Use', 'VB')
         Tokenizer matches: []
     Manual annotation: ('been', 'VBN')
         Tokenizer matches: []
     Manual annotation: ('subprocess', 'NN')
         Tokenizer matches: []
     Manual annotation: ('by', 'IN')
         Tokenizer matches: []
     Manual annotation: ('os.system', 'UNK')
         Tokenizer matches: []
     Manual annotation: ('superseded', 'VBD')
         Tokenizer matches: []
     Manual annotation: ('has', 'VBZ')
         Tokenizer matches: []
     Manual annotation: ('the', 'DT')
         Tokenizer matches: []
     Manual annotation: ('subproccess', 'NN')
         Tokenizer matches: []
     Manual annotation: ('module', 'NN')
         Tokenizer matches: []
Post: 61
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ("Popen(['ls', '-l'])", 'Method')
         Tokenizer matches: [("popen(['ls', '-l'])", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('then', 'RB')
         Tokenizer matches: [('then', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('is', 'Operator')
         Tokenizer matches: [('is', 'VBZ')]
             false positive POS tag match: operator
     Manual annotation: ('subprocess.Popen', 'UNK')
         Tokenizer matches: [('subprocess.popen', 'URL')]
             false positive POS tag match: unk
     Manual annotation: ('status', 'NN')
         Tokenizer matches: [('status', 'VBZ')]
             false positive POS tag match: nn
     Manual annotation: ('Popen', 'NNP')
         Tokenizer matches: [('popen', 'VBN')]
             false positive POS tag match: nnp
     Manual annotation: ('None', 'Operand')
         Tokenizer matches: [('none', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('check', 'VB')
         Tokenizer matches: [('check', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('use', 'VB')
         Tokenizer matches: [('use', 'VBP')]
             true positive POS tag match: vb
     Manual annotation: ('proc.kill()', 'Method')
         Tokenizer matches: [('proc.kill()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('out', 'RP')
         Tokenizer matches: [('out', 'RP')]
             true positive POS tag match: rp
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('procedure', 'NN')
         Tokenizer matches: [('procedure', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('Check', 'VB')
         Tokenizer matches: [('check', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('subprocess', 'NN')
         Tokenizer matches: [('subprocess', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('proc.poll()', 'Method')
         Tokenizer matches: [('proc.poll()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('proc', 'Variable')
         Tokenizer matches: [('proc', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
Post: 62
     Manual annotation: ('switch(n)', 'Method')
         Tokenizer matches: [('switch(n)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('case(2)', 'Method')
         Tokenizer matches: [('case(2)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('Usage', 'NN')
         Tokenizer matches: [('usage', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('case(2, 3, 5, 7)', 'Method')
         Tokenizer matches: [('case(2, 3, 5, 7)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('#n is an even number.', 'Comment')
         Tokenizer matches: [('#n is an even number.', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('"Only single-digit numbers are allowed."', 'String')
         Tokenizer matches: [('"only single-digit numbers are allowed."', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('case(0)', 'Method')
         Tokenizer matches: [('case(0)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('class', 'Operator')
         Tokenizer matches: [('class', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('"n is a perfect square."', 'String')
         Tokenizer matches: [('"n is a perfect square."', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('"n is a prime number."', 'String')
         Tokenizer matches: [('"n is a prime number."', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('case(1, 4, 9)', 'Method')
         Tokenizer matches: [('case(1, 4, 9)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('break', 'Operator')
         Tokenizer matches: [('break', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('n', 'Variable')
         Tokenizer matches: [('n', 'VBP')]
             false positive POS tag match: variable
     Manual annotation: ('"You typed zero."', 'String')
         Tokenizer matches: [('"you typed zero."', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('case(*args)', 'Method')
         Tokenizer matches: [('case(*args)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('2', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('11', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('case(6, 8)', 'Method')
         Tokenizer matches: [('case(6, 8)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('switch(object)', 'Method')
         Tokenizer matches: [('switch(object)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('__new__(class_, value)', 'Method')
         Tokenizer matches: [('__new__(class_, value)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('any((arg == switch.value for arg in args))', 'Method')
         Tokenizer matches: [('any((arg == switch.value for arg in args))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('class_.value', 'Variable')
         Tokenizer matches: [('class_.value', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('Tests', 'NNS')
         Tokenizer matches: [('tests', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('#n is a prime number.', 'Comment')
         Tokenizer matches: [('#n is a prime number.', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('value', 'Variable')
         Tokenizer matches: [('value', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('return', 'Operator')
         Tokenizer matches: [('return', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('#Result:', 'Comment')
         Tokenizer matches: [('#result:', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('while', 'Operator')
         Tokenizer matches: [('while', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('#Only single-digit numbers are allowed.', 'Comment')
         Tokenizer matches: [('#only single-digit numbers are allowed.', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('"n is an even number."', 'String')
         Tokenizer matches: [('"n is an even number."', 'STRING')]
             true positive POS tag match: string
Post: 63
     Manual annotation: ('# else case 3', 'Comment')
         Tokenizer matches: [('# else case 3', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('==', 'Operator')
         Tokenizer matches: [('==', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('break', 'VB')
         Tokenizer matches: [('break', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('# case', 'Comment')
         Tokenizer matches: [('# case', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('5.0', 'Operand')
         Tokenizer matches: []
     Manual annotation: ("'Greater than five'", 'String')
         Tokenizer matches: [("'greater than five'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('# simple case alternative', 'Comment')
         Tokenizer matches: [('# simple case alternative', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('True', 'Operand')
         Tokenizer matches: [('true', 'JJ')]
             false positive POS tag match: operand
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ("'Equal to five'", 'String')
         Tokenizer matches: [("'equal to five'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('while', 'Operator')
         Tokenizer matches: [('while', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('# case 1', 'Comment')
         Tokenizer matches: [('# case 1', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('# case 2', 'Comment')
         Tokenizer matches: [('# case 2', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ("'Must be less than 5'", 'String')
         Tokenizer matches: [("'must be less than 5'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('some_value', 'Variable')
         Tokenizer matches: [('some_value', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('# this while loop block simulates a case block', 'Comment')
         Tokenizer matches: [('# this while loop block simulates a case block', 'COMMENT')]
             true positive POS tag match: comment
Post: 64
     Manual annotation: ('os.path.exists(path)', 'Method')
         Tokenizer matches: [('os.path.exists(path)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('# returns whether the path (dir or file) exists or not', 'Comment')
         Tokenizer matches: [('# returns whether the path (dir or file) exists or not', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('os.path.isfile(path)', 'Method')
         Tokenizer matches: [('os.path.isfile(path)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('os', 'UNK')
         Tokenizer matches: [('os', 'NNS')]
             false positive POS tag match: unk
     Manual annotation: ('# returns whether the file exists or not', 'Comment')
         Tokenizer matches: [('# returns whether the file exists or not', 'COMMENT')]
             true positive POS tag match: comment
Post: 65
     Manual annotation: ('new', 'JJ')
         Tokenizer matches: [('new', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('pathlib', 'UNK')
         Tokenizer matches: [('pathlib', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('# If it is true, return true on your code.', 'Comment')
         Tokenizer matches: [('# if it is true, return true on your code.', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('3.4', 'CD')
         Tokenizer matches: []
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('files', 'NNS')
         Tokenizer matches: [('files', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('module', 'NN')
         Tokenizer matches: [('module', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('provides', 'VBZ')
         Tokenizer matches: [('provides', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ("pathlib.Path('path/to/file')", 'Method')
         Tokenizer matches: [("pathlib.path('path/to/file')", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('path', 'Variable')
         Tokenizer matches: [('path', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('In', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('# If you want to check a directory: path.is_dir()', 'Comment')
         Tokenizer matches: [('# if you want to check a directory: path.is_dir()', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('manage', 'VB')
         Tokenizer matches: [('manage', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('path.is_file()', 'Method')
         Tokenizer matches: [('path.is_file()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('language', 'NN')
         Tokenizer matches: [('language', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
Post: 66
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('get', 'VB')
         Tokenizer matches: [('get', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('element', 'NN')
         Tokenizer matches: [('element', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('last', 'JJ')
         Tokenizer matches: [('last', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('In', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('how', 'WRB')
         Tokenizer matches: [('how', 'WRB')]
             true positive POS tag match: wrb
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('Python', 'PRP')
         Tokenizer matches: [('python', 'NN')]
             false positive POS tag match: prp
     Manual annotation: ('do', 'VBP')
         Tokenizer matches: [('do', 'NN')]
             false positive POS tag match: vbp
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 67
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('delete', 'VB')
         Tokenizer matches: [('delete', 'JJ')]
             false positive POS tag match: vb
     Manual annotation: ('depends', 'VBZ')
         Tokenizer matches: [('depends', 'NNS')]
             false positive POS tag match: vbz
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('element', 'NN')
         Tokenizer matches: [('element', 'VB')]
             false positive POS tag match: nn
     Manual annotation: ('alist.pop()', 'Method')
         Tokenizer matches: [('alist.pop()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('method', 'NN')
         Tokenizer matches: [('method', 'VB')]
             false positive POS tag match: nn
     Manual annotation: ('want', 'VBP')
         Tokenizer matches: [('want', 'NN')]
             false positive POS tag match: vbp
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('last', 'RB')
         Tokenizer matches: [('last', 'JJ')]
             false positive POS tag match: rb
     Manual annotation: ('also', 'RB')
         Tokenizer matches: [('also', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('on', 'IN')
         Tokenizer matches: [('on', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('It', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('with', 'IN')
         Tokenizer matches: [('with', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('do', 'VB')
         Tokenizer matches: [('do', 'VBP')]
             true positive POS tag match: vb
     Manual annotation: ('will', 'MD')
         Tokenizer matches: [('will', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('pop()', 'Method')
         Tokenizer matches: [('pop()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('your', 'PRP_')
         Tokenizer matches: [('your', 'PRP$')]
             true positive POS tag match: prp_
     Manual annotation: ('what', 'WP')
         Tokenizer matches: [('what', 'WP')]
             true positive POS tag match: wp
     Manual annotation: ('because', 'IN')
         Tokenizer matches: [('because', 'IN')]
             true positive POS tag match: in
Post: 68
     Manual annotation: ('mylist', 'Variable')
         Tokenizer matches: [('mylist', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('[ 1 , 2 , 3 , 4 , 5]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('# Method-3 : Using pop, pop will remove the last', 'Comment')
         Tokenizer matches: [('# method-3 : using pop, pop will remove the last', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('print(mylist[-1])', 'Method')
         Tokenizer matches: [('print(mylist[-1])', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('#------------------------------------', 'Comment')
         Tokenizer matches: [('#------------------------------------', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('# Method-1 : Last index', 'Comment')
         Tokenizer matches: [('# method-1 : last index', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('print(mylist[len(mylist) - 1])', 'Method')
         Tokenizer matches: [('print(mylist[len(mylist) - 1])', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('# Method-2 : Using len', 'Comment')
         Tokenizer matches: [('# method-2 : using len', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('print(mylist.pop())', 'Method')
         Tokenizer matches: [('print(mylist.pop())', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('#            element from the list', 'Comment')
         Tokenizer matches: []
Post: 69
     Manual annotation: ('use', 'VB')
         Tokenizer matches: [('use', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('below', 'IN')
         Tokenizer matches: [('below', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('if', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('get', 'VB')
         Tokenizer matches: [('get', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('when', 'WRB')
         Tokenizer matches: [('when', 'WRB')]
             true positive POS tag match: wrb
     Manual annotation: ('IndexError', 'NNP')
         Tokenizer matches: [('indexerror', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('next(reversed(some_list), None)', 'Method')
         Tokenizer matches: [('next(reversed(some_list), none)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('not', 'RB')
         Tokenizer matches: [('not', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('also', 'RB')
         Tokenizer matches: [('also', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('empty', 'JJ')
         Tokenizer matches: [('empty', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('want', 'VBP')
         Tokenizer matches: [('want', 'VBP')]
             true positive POS tag match: vbp
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('code', 'NN')
         Tokenizer matches: [('code', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('do', 'VBP')
         Tokenizer matches: [('do', 'VBP')]
             true positive POS tag match: vbp
Post: 7
     Manual annotation: ('example', 'NN')
         Tokenizer matches: [('example', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('For', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('check', 'VB')
         Tokenizer matches: [('check', 'VBP')]
             true positive POS tag match: vb
     Manual annotation: ('if', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('I', 'PRP')
         Tokenizer matches: [('i', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('passed', 'VBN')
         Tokenizer matches: [('passed', 'VBN')]
             true positive POS tag match: vbn
     Manual annotation: ('a', 'UNK')
         Tokenizer matches: [('a', 'DT')]
             false positive POS tag match: unk
     Manual annotation: ('following', 'NN')
         Tokenizer matches: [('following', 'VBG')]
             false positive POS tag match: nn
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('see', 'VB')
         Tokenizer matches: [('see', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('empty', 'JJ')
         Tokenizer matches: [('empty', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('a', 'Variable')
         Tokenizer matches: [('a', 'DT')]
             false positive POS tag match: variable
     Manual annotation: ('do', 'VBP')
         Tokenizer matches: [('do', 'VBP')]
             true positive POS tag match: vbp
     Manual annotation: ('How', 'WRB')
         Tokenizer matches: [('how', 'WRB')]
             true positive POS tag match: wrb
     Manual annotation: ('[]', 'Operand')
         Tokenizer matches: []
Post: 70
     Manual annotation: ('if', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('your_list[-1]', 'Variable')
         Tokenizer matches: []
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('remove', 'VB')
         Tokenizer matches: [('remove', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('value', 'NN')
         Tokenizer matches: [('value', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('want', 'VBP')
         Tokenizer matches: [('want', 'JJ')]
             false positive POS tag match: vbp
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('last', 'RB')
         Tokenizer matches: [('last', 'JJ')]
             false positive POS tag match: rb
     Manual annotation: ('just', 'RB')
         Tokenizer matches: [('just', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('use', 'VB')
         Tokenizer matches: [('use', 'VBP')]
             true positive POS tag match: vb
     Manual annotation: ('get', 'VB')
         Tokenizer matches: [('get', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('BUT', 'CC')
         Tokenizer matches: [('but', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('your_list.pop()', 'Method')
         Tokenizer matches: [('your_list.pop()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('also', 'RB')
         Tokenizer matches: [('also', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('it', 'IN')
         Tokenizer matches: [('it', 'PRP')]
             false positive POS tag match: in
     Manual annotation: ('should', 'MD')
         Tokenizer matches: [('should', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 71
     Manual annotation: ('answer', 'NN')
         Tokenizer matches: [('answer', 'JJR')]
             false positive POS tag match: nn
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('but', 'CC')
         Tokenizer matches: [('but', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('sys.stdout.write(".")', 'Method')
         Tokenizer matches: [('sys.stdout.write(".")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('question', 'NN')
         Tokenizer matches: [('question', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('title', 'NN')
         Tokenizer matches: [('title', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('how', 'WRB')
         Tokenizer matches: [('how', 'WRB')]
             true positive POS tag match: wrb
     Manual annotation: ('print', 'VB')
         Tokenizer matches: []
     Manual annotation: ('same', 'RB')
         Tokenizer matches: [('same', 'JJ')]
             false positive POS tag match: rb
     Manual annotation: ('sys', 'UNK')
         Tokenizer matches: [('sys', 'VBZ')]
             false positive POS tag match: unk
     Manual annotation: ('This', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('not', 'RB')
         Tokenizer matches: [('not', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('on', 'IN')
         Tokenizer matches: [('on', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('sys.stdout.flush()', 'Method')
         Tokenizer matches: [('sys.stdout.flush()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('xrange(0,10)', 'Method')
         Tokenizer matches: [('xrange(0,10)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('line', 'NN')
         Tokenizer matches: []
     Manual annotation: ('i', 'Variable')
         Tokenizer matches: [('i', 'PRP')]
             false positive POS tag match: variable
Post: 72
     Manual annotation: ('printf', 'Variable')
         Tokenizer matches: [('printf', 'VB')]
             false positive POS tag match: variable
     Manual annotation: ('new', 'JJ')
         Tokenizer matches: [('new', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('Using', 'VBG')
         Tokenizer matches: [('using', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('printf("Hello world\\n")', 'Method')
         Tokenizer matches: [('printf("hello world\\n")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('Hello', 'UH')
         Tokenizer matches: [('hello', 'NN')]
             false positive POS tag match: uh
     Manual annotation: ('printf', 'UNK')
         Tokenizer matches: [('printf', 'VB')]
             false positive POS tag match: unk
     Manual annotation: ('functools.partial(print, end="")', 'Method')
         Tokenizer matches: [('functools.partial(print, end="")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('functools', 'UNK')
         Tokenizer matches: [('functools', 'NNS')]
             false positive POS tag match: unk
     Manual annotation: ('functools.partial', 'UNK')
         Tokenizer matches: [('functools.partial', 'URL')]
             false positive POS tag match: unk
     Manual annotation: ('function', 'NN')
         Tokenizer matches: [('function', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('called', 'VBD')
         Tokenizer matches: [('called', 'VBN')]
             false positive POS tag match: vbd
     Manual annotation: ('parameters', 'NNS')
         Tokenizer matches: [('parameters', 'NNS')]
             true positive POS tag match: nns
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('Easy', 'JJ')
         Tokenizer matches: [('easy', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('wrap', 'VB')
         Tokenizer matches: [('wrap', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('with', 'IN')
         Tokenizer matches: [('with', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('create', 'VB')
         Tokenizer matches: [('create', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('world', 'NN')
         Tokenizer matches: [('world', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('default', 'VB')
         Tokenizer matches: [('default', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('way', 'NN')
         Tokenizer matches: [('way', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
Post: 73
     Manual annotation: ('python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('function', 'NN')
         Tokenizer matches: [('function', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('new', 'JJ')
         Tokenizer matches: [('new', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('automatically', 'RB')
         Tokenizer matches: [('automatically', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('print("Hello World", end="")', 'Method')
         Tokenizer matches: [('print("hello world", end="")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('generates', 'VBZ')
         Tokenizer matches: [('generates', 'NNS')]
             false positive POS tag match: vbz
     Manual annotation: ('could', 'MD')
         Tokenizer matches: [('could', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('try', 'VB')
         Tokenizer matches: [('try', 'VBP')]
             true positive POS tag match: vb
     Manual annotation: ('line', 'NN')
         Tokenizer matches: [('line', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
Post: 74
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('iterator', 'NN')
         Tokenizer matches: [('iterator', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('end', 'VBP')
         Tokenizer matches: [('end', 'VBP')]
             true positive POS tag match: vbp
     Manual annotation: ('argument', 'NN')
         Tokenizer matches: [('argument', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('python3', 'NNP')
         Tokenizer matches: [('python3', 'NNP')]
             true positive POS tag match: nnp
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'JJ')]
             false positive POS tag match: vb
     Manual annotation: ('xrange()', 'Method')
         Tokenizer matches: [('xrange()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('exist', 'NN')
         Tokenizer matches: [('exist', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('In', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('range()', 'Method')
         Tokenizer matches: [('range()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('with', 'IN')
         Tokenizer matches: [('with', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('range(10)', 'Method')
         Tokenizer matches: [('range(10)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ("print('.', end='')", 'Method')
         Tokenizer matches: [("print('.', end='')", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('do', 'VB')
         Tokenizer matches: [('do', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('returns', 'VBZ')
         Tokenizer matches: [('returns', 'NNS')]
             false positive POS tag match: vbz
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ("doesn't", 'VBP')
         Tokenizer matches: []
     Manual annotation: ('i', 'Variable')
         Tokenizer matches: [('i', 'PRP')]
             false positive POS tag match: variable
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 75
     Manual annotation: ('sys', 'UNK')
         Tokenizer matches: [('sys', 'NNS')]
             false positive POS tag match: unk
     Manual annotation: ('sys.stdout.write("\\rfoobar bar black sheep")', 'Method')
         Tokenizer matches: [('sys.stdout.write("\\rfoobar bar black sheep")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ("sys.stdout.write('\\n')", 'Method')
         Tokenizer matches: [("sys.stdout.write('\\n')", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('# Keeps the initial message in buffer', 'Comment')
         Tokenizer matches: []
     Manual annotation: ('sys.stdout.flush()', 'Method')
         Tokenizer matches: [('sys.stdout.flush()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('# Replace the message with a new one.', 'Comment')
         Tokenizer matches: [('# replace the message with a new one.', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('# Wait 2 seconds', 'Comment')
         Tokenizer matches: [('# wait 2 seconds', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('time', 'NN')
         Tokenizer matches: [('time', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('time.sleep(2)', 'Method')
         Tokenizer matches: [('time.sleep(2)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('# Finalize the new message by printing a return carriage.', 'Comment')
         Tokenizer matches: [('# finalize the new message by printing a return carriage.', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('try', 'VB')
         Tokenizer matches: [('try', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('sys.stdout.write("\\r"+\'hahahahaaa             \')', 'Method')
         Tokenizer matches: [('sys.stdout.write("\\r"+\'hahahahaaa             \')', 'METHOD')]
             true positive POS tag match: method
Post: 76
     Manual annotation: ('os.fdopen(sys.stdout.fileno(), "w", newline=None)', 'Method')
         Tokenizer matches: [('os.fdopen(sys.stdout.fileno(), "w", newline=none)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('by', 'IN')
         Tokenizer matches: [('by', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('this', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('# in this mode,', 'Comment')
         Tokenizer matches: [('# in this mode,', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ("# input:  accepts any newline character, outputs as '\\n'", 'Comment')
         Tokenizer matches: [("# input:  accepts any newline character, outputs as '\\n'", 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('works', 'VBZ')
         Tokenizer matches: [('works', 'NNS')]
             false positive POS tag match: vbz
     Manual annotation: ('problem', 'NN')
         Tokenizer matches: []
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('tested', 'VBN')
         Tokenizer matches: [('tested', 'VBN')]
             true positive POS tag match: vbn
     Manual annotation: ('doing', 'VBG')
         Tokenizer matches: []
     Manual annotation: ('same', 'RB')
         Tokenizer matches: [('same', 'VBD')]
             false positive POS tag match: rb
     Manual annotation: ('sys', 'UNK')
         Tokenizer matches: [('sys', 'NNS')]
             false positive POS tag match: unk
     Manual annotation: ('unix', 'NNP')
         Tokenizer matches: [('unix', 'CD')]
             false positive POS tag match: nnp
     Manual annotation: ('not', 'RB')
         Tokenizer matches: [('not', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('solved', 'VBN')
         Tokenizer matches: [('solved', 'VBD')]
             false positive POS tag match: vbn
     Manual annotation: ('hth', 'UNK')
         Tokenizer matches: [('hth', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('on', 'IN')
         Tokenizer matches: [('on', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('os', 'UNK')
         Tokenizer matches: [('os', 'NNS')]
             false positive POS tag match: unk
     Manual annotation: ('had', 'VBN')
         Tokenizer matches: [('had', 'VBD')]
             false positive POS tag match: vbn
     Manual annotation: ("# output: '\\n' converts to os.linesep", 'Comment')
         Tokenizer matches: [("# output: '\\n' converts to os.linesep", 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('range(1,10)', 'Method')
         Tokenizer matches: [('range(1,10)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('sys.stdout', 'Variable')
         Tokenizer matches: [('sys.stdout', 'URL')]
             false positive POS tag match: variable
     Manual annotation: ('have', 'VBZ')
         Tokenizer matches: [('have', 'VB')]
             true positive POS tag match: vbz
     Manual annotation: ('# reopen stdout with "newline=None".', 'Comment')
         Tokenizer matches: [('# reopen stdout with "newline=none".', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('windows', 'NNP')
         Tokenizer matches: []
     Manual annotation: ('macosx', 'NNP')
         Tokenizer matches: [('macosx', 'VB')]
             false positive POS tag match: nnp
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('i', 'PRP')
         Tokenizer matches: [('i', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('both', 'DT')
         Tokenizer matches: [('both', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('recently', 'RB')
         Tokenizer matches: [('recently', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('i', 'Variable')
         Tokenizer matches: [('i', 'PRP')]
             false positive POS tag match: variable
Post: 77
     Manual annotation: ('python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('shell', 'NN')
         Tokenizer matches: [('shell', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ("eval('x + 1')", 'Method')
         Tokenizer matches: [("eval('x + 1')", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('1', 'CD')
         Tokenizer matches: []
     Manual annotation: ('program', 'NN')
         Tokenizer matches: [('program', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('eval', 'UNK')
         Tokenizer matches: [('eval', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('2', 'CD')
         Tokenizer matches: []
     Manual annotation: ('interactive', 'RB')
         Tokenizer matches: [('interactive', 'JJ')]
             false positive POS tag match: rb
     Manual annotation: ('itself', 'PRP_')
         Tokenizer matches: [('itself', 'PRP')]
             true positive POS tag match: prp_
     Manual annotation: ('within', 'IN')
         Tokenizer matches: [('within', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('The', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('example', 'NN')
         Tokenizer matches: [('example', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('function', 'NN')
         Tokenizer matches: [('function', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('x', 'Variable')
         Tokenizer matches: [('x', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ("eval('x')", 'Method')
         Tokenizer matches: [("eval('x')", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('lets', 'VBZ')
         Tokenizer matches: [('lets', 'NNS')]
             false positive POS tag match: vbz
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('code', 'NN')
         Tokenizer matches: [('code', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('run', 'VB')
         Tokenizer matches: [('run', 'VBN')]
             true positive POS tag match: vb
     Manual annotation: ('1', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
Post: 78
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('remove', 'VB')
         Tokenizer matches: [('remove', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('site-packages/easy-install.pth', 'UNK')
         Tokenizer matches: []
     Manual annotation: ('-rf', 'UNK')
         Tokenizer matches: []
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('might', 'MD')
         Tokenizer matches: [('might', 'NN')]
             false positive POS tag match: md
     Manual annotation: ('.egg', 'UNK')
         Tokenizer matches: [('.egg', 'JJ')]
             false positive POS tag match: unk
     Manual annotation: ('be', 'VB')
         Tokenizer matches: [('be', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('To', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('rm', 'UNK')
         Tokenizer matches: [('rm', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('need', 'VBP')
         Tokenizer matches: [('need', 'VBP')]
             true positive POS tag match: vbp
     Manual annotation: ('matching', 'VBG')
         Tokenizer matches: [('matching', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('an', 'DT')
         Tokenizer matches: [('an', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('egg', 'NN')
         Tokenizer matches: [('egg', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('directory', 'NN')
         Tokenizer matches: [('directory', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('uninstall', 'VB')
         Tokenizer matches: [('uninstall', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('line', 'NN')
         Tokenizer matches: [('line', 'NN')]
             true positive POS tag match: nn
Post: 79
     Manual annotation: ('"bar"', 'String')
         Tokenizer matches: [('"bar"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('For', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('get', 'VB')
         Tokenizer matches: [('get', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('"baz"', 'String')
         Tokenizer matches: [('"baz"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('item', 'NN')
         Tokenizer matches: [('item', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('1', 'CD')
         Tokenizer matches: []
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('cleanest', 'RB')
         Tokenizer matches: [('cleanest', 'NN')]
             false positive POS tag match: rb
     Manual annotation: ('way', 'NN')
         Tokenizer matches: [('way', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('an', 'DT')
         Tokenizer matches: [('an', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('what', 'WRB')
         Tokenizer matches: [('what', 'WP')]
             false positive POS tag match: wrb
     Manual annotation: ('its', 'PRP_')
         Tokenizer matches: [('its', 'PRP$')]
             true positive POS tag match: prp_
     Manual annotation: ('index', 'NN')
         Tokenizer matches: [('index', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('"foo"', 'String')
         Tokenizer matches: [('"foo"', 'STRING')]
             true positive POS tag match: string
Post: 8
     Manual annotation: ('if', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('quite', 'RB')
         Tokenizer matches: [('quite', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('implicit', 'JJ')
         Tokenizer matches: [('implicit', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('not', 'RB')
         Tokenizer matches: [('not', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('empty', 'JJ')
         Tokenizer matches: [('empty', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('print("List is empty")', 'Method')
         Tokenizer matches: [('print("list is empty")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('Using', 'VBG')
         Tokenizer matches: [('using', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('pythonic', 'JJ')
         Tokenizer matches: [('pythonic', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('booleanness', 'NN')
         Tokenizer matches: [('booleanness', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 80
     Manual annotation: ('["foo", "bar", "baz"].index("bar")', 'Method')
         Tokenizer matches: []
     Manual annotation: ('1', 'CD')
         Tokenizer matches: []
Post: 81-1
     Manual annotation: ('ValueError', 'Operand')
         Tokenizer matches: [('valueerror', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('index()', 'Method')
         Tokenizer matches: [('index()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('except', 'Operator')
         Tokenizer matches: [('except', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('all_indices("foo", ["foo","bar","baz","foo"])', 'Method')
         Tokenizer matches: [('all_indices("foo", ["foo","bar","baz","foo"])', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('indices.append(idx)', 'Method')
         Tokenizer matches: [('indices.append(idx)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('value', 'NN')
         Tokenizer matches: [('value', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('idx', 'Variable')
         Tokenizer matches: [('idx', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('# L.index(value, [start, [stop]]) -> integer -- return first index of value', 'Comment')
         Tokenizer matches: [('# l.index(value, [start, [stop]]) -> integer -- return first index of value', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('first', 'RB')
         Tokenizer matches: [('first', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('index', 'NN')
         Tokenizer matches: [('index', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('indices', 'Operand')
         Tokenizer matches: [('indices', 'NNS')]
             false positive POS tag match: operand
     Manual annotation: ('True', 'Operand')
         Tokenizer matches: [('true', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('# index(...)', 'Comment')
         Tokenizer matches: [('# index(...)', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('all_indices(value, qlist)', 'Method')
         Tokenizer matches: [('all_indices(value, qlist)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('qlist.index(value, idx+1)', 'Method')
         Tokenizer matches: [('qlist.index(value, idx+1)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('returns', 'VBZ')
         Tokenizer matches: [('returns', 'NNS')]
             false positive POS tag match: vbz
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('while', 'Operator')
         Tokenizer matches: [('while', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('indices', 'Variable')
         Tokenizer matches: [('indices', 'NNS')]
             false positive POS tag match: variable
     Manual annotation: ('return', 'Operator')
         Tokenizer matches: [('return', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 82
     Manual annotation: ("[i for i,x in enumerate(xs) if x == 'foo']", 'Operand')
         Tokenizer matches: []
     Manual annotation: ('get', 'VB')
         Tokenizer matches: [('get', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('all', 'DT')
         Tokenizer matches: [('all', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('To', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('indices', 'Variable')
         Tokenizer matches: [('indices', 'NNS')]
             false positive POS tag match: variable
     Manual annotation: ('indices', 'NNS')
         Tokenizer matches: [('indices', 'NNS')]
             true positive POS tag match: nns
Post: 83
     Manual annotation: ('if', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('ValueError', 'Operand')
         Tokenizer matches: [('valueerror', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('except', 'Operator')
         Tokenizer matches: [('except', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('issue', 'NN')
         Tokenizer matches: [('issue', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('list_element.index(element)', 'Method')
         Tokenizer matches: [('list_element.index(element)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('find_element_in_list(element, list_element)', 'Method')
         Tokenizer matches: [('find_element_in_list(element, list_element)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('problem', 'NN')
         Tokenizer matches: [('problem', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('element', 'NN')
         Tokenizer matches: [('element', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('A', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('function', 'NN')
         Tokenizer matches: [('function', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('This', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('not', 'RB')
         Tokenizer matches: [('not', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('# if element is found it returns index of element else returns None', 'Comment')
         Tokenizer matches: [('# if element is found it returns index of element else returns none', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('index_element', 'Variable')
         Tokenizer matches: [('index_element', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('handles', 'VBZ')
         Tokenizer matches: [('handles', 'NNS')]
             false positive POS tag match: vbz
     Manual annotation: ('arise', 'VB')
         Tokenizer matches: [('arise', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('index_element', 'Operand')
         Tokenizer matches: [('index_element', 'VARIABLE')]
             false positive POS tag match: operand
     Manual annotation: ('will', 'MD')
         Tokenizer matches: [('will', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('return', 'Operator')
         Tokenizer matches: []
Post: 84
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('indexes', 'VBZ')
         Tokenizer matches: [('indexes', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('then', 'RB')
         Tokenizer matches: [('then', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('np_array', 'Variable')
         Tokenizer matches: [('np_array', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('[1,2,1,3,4,5,1]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('want', 'VBP')
         Tokenizer matches: [('want', 'JJ')]
             false positive POS tag match: vbp
     Manual annotation: ('array', 'Variable')
         Tokenizer matches: [('array', 'VBP')]
             false positive POS tag match: variable
     Manual annotation: ('numpy', 'Variable')
         Tokenizer matches: [('numpy', 'JJ')]
             false positive POS tag match: variable
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('use', 'VB')
         Tokenizer matches: [('use', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('all', 'DT')
         Tokenizer matches: [('all', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('If', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('# Out: (array([0, 2, 6], dtype=int64),)', 'Comment')
         Tokenizer matches: [('# out: (array([0, 2, 6], dtype=int64),)', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('item_index', 'Variable')
         Tokenizer matches: [('item_index', 'VARIABLE')]
             true positive POS tag match: variable
     Manual annotation: ('item', 'Variable')
         Tokenizer matches: [('item', 'VB')]
             false positive POS tag match: variable
     Manual annotation: ('np.where(np_array==item)', 'Method')
         Tokenizer matches: [('np.where(np_array==item)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('np.array(array)', 'Method')
         Tokenizer matches: [('np.array(array)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('numpy', 'UNK')
         Tokenizer matches: [('numpy', 'JJ')]
             false positive POS tag match: unk
     Manual annotation: ('1', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('np', 'Operand')
         Tokenizer matches: [('np', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('as', 'Operator')
         Tokenizer matches: [('as', 'IN')]
             false positive POS tag match: operator
Post: 85
     Manual annotation: ('nearest', 'JJS')
         Tokenizer matches: [('nearest', 'NN')]
             false positive POS tag match: jjs
     Manual annotation: ('value', 'NN')
         Tokenizer matches: [('value', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('diff[0][1]', 'Variable')
         Tokenizer matches: []
     Manual annotation: ('diff', 'Variable')
         Tokenizer matches: [('diff', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('Possible', 'JJ')
         Tokenizer matches: [('possible', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('a', 'Variable')
         Tokenizer matches: [('a', 'DT')]
             false positive POS tag match: variable
     Manual annotation: ('index', 'NN')
         Tokenizer matches: [('index', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('[(abs(i - x),idx) for (idx,x) in enumerate(a)]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('[1.0, 3.2, -2.5, -3.1]', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('diff [(1.0, 2), (1.6, 3), (2.5, 0), (4.7, 1)]', 'Variable')
         Tokenizer matches: []
     Manual annotation: ('-1.5', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('have', 'VBZ')
         Tokenizer matches: [('have', 'VBP')]
             false positive POS tag match: vbz
     Manual annotation: ('diff.sort()', 'Method')
         Tokenizer matches: [('diff.sort()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('diff [(2.5, 0), (4.7, 1), (1.0, 2), (1.6, 3)]', 'Variable')
         Tokenizer matches: []
     Manual annotation: ('solution', 'NN')
         Tokenizer matches: [('solution', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('i', 'Variable')
         Tokenizer matches: [('i', 'PRP')]
             false positive POS tag match: variable
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
Post: 86
     Manual annotation: ('index', 'Operand')
         Tokenizer matches: [('index', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('Hope', 'VBP')
         Tokenizer matches: [('hope', 'NN')]
             false positive POS tag match: vbp
     Manual annotation: ('you', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('then', 'RB')
         Tokenizer matches: [('then', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('this', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('EDIT', 'NN')
         Tokenizer matches: [('edit', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('enumerate(myList)', 'Method')
         Tokenizer matches: [('enumerate(mylist)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('one-liner', 'NN')
         Tokenizer matches: []
     Manual annotation: ('might', 'MD')
         Tokenizer matches: [('might', 'NN')]
             false positive POS tag match: md
     Manual annotation: ('diff', 'Variable')
         Tokenizer matches: [('diff', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('like', 'VBP')
         Tokenizer matches: [('like', 'IN')]
             false positive POS tag match: vbp
     Manual annotation: ('If', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('you', 'VBP')
         Tokenizer matches: [('you', 'PRP')]
             false positive POS tag match: vbp
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('min(L, key=lambda x: abs(target-x))', 'Method')
         Tokenizer matches: [('min(l, key=lambda x: abs(target-x))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('abs(target - num)', 'Method')
         Tokenizer matches: [('abs(target - num)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('return', 'Operator')
         Tokenizer matches: [('return', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('finder(myList, target)', 'Method')
         Tokenizer matches: [('finder(mylist, target)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('help', 'VBZ')
         Tokenizer matches: []
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('better', 'JJR')
         Tokenizer matches: [('better', 'JJR')]
             true positive POS tag match: jjr
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('index', 'Variable')
         Tokenizer matches: [('index', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('num', 'Variable')
         Tokenizer matches: [('num', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('i', 'Variable')
         Tokenizer matches: [('i', 'PRP')]
             false positive POS tag match: variable
Post: 87
     Manual annotation: ('False', 'NN')
         Tokenizer matches: [('false', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('else', 'Operator')
         Tokenizer matches: [('else', 'RB')]
             false positive POS tag match: operator
     Manual annotation: ('"The list is empty"', 'String')
         Tokenizer matches: [('"the list is empty"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('"The list is not empty"', 'String')
         Tokenizer matches: [('"the list is not empty"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('evaluates', 'VBZ')
         Tokenizer matches: [('evaluates', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('empty', 'JJ')
         Tokenizer matches: [('empty', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('not', 'Operator')
         Tokenizer matches: [('not', 'RB')]
             false positive POS tag match: operator
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('an', 'DT')
         Tokenizer matches: [('an', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('c', 'Operand')
         Tokenizer matches: [('c', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('In', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
Post: 88
     Manual annotation: ('s', 'Variable')
         Tokenizer matches: [('s', 'NNS')]
             false positive POS tag match: variable
     Manual annotation: ('official', 'JJ')
         Tokenizer matches: [('official', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('str.lower()', 'Method')
         Tokenizer matches: [('str.lower()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('print(s.lower())', 'Method')
         Tokenizer matches: [('print(s.lower())', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('"Kilometer"', 'String')
         Tokenizer matches: [('"kilometer"', 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('documentation', 'NN')
         Tokenizer matches: [('documentation', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('The', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
Post: 89
     Manual annotation: ('python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('using', 'VBG')
         Tokenizer matches: [('using', 'VBG')]
             true positive POS tag match: vbg
     Manual annotation: ('without', 'IN')
         Tokenizer matches: [('without', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('Reverse', 'VB')
         Tokenizer matches: [('reverse', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('string', 'NN')
         Tokenizer matches: [('string', 'VBG')]
             false positive POS tag match: nn
     Manual annotation: ('[::-1]', 'UNK')
         Tokenizer matches: []
     Manual annotation: ('+=', 'Operator')
         Tokenizer matches: [('+=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('n', 'Variable')
         Tokenizer matches: [('n', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('x', 'Variable')
         Tokenizer matches: [('x', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('in', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('len(test)', 'Method')
         Tokenizer matches: [('len(test)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('reversed()', 'Method')
         Tokenizer matches: [('reversed()', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('reverse(test)', 'Method')
         Tokenizer matches: [('reverse(test)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('range(n-1,-1,-1)', 'Method')
         Tokenizer matches: [('range(n-1,-1,-1)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('or', 'CC')
         Tokenizer matches: [('or', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('return', 'Operator')
         Tokenizer matches: []
Post: 9
     Manual annotation: ('if', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('prefer', 'VBP')
         Tokenizer matches: [('prefer', 'NN')]
             false positive POS tag match: vbp
     Manual annotation: ('is', 'VBZ')
         Tokenizer matches: [('is', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('ay', 'NN')
         Tokenizer matches: []
     Manual annotation: ('clear', 'JJ')
         Tokenizer matches: [('clear', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('its', 'PRP_')
         Tokenizer matches: [('its', 'PRP$')]
             true positive POS tag match: prp_
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('we', 'PRP')
         Tokenizer matches: [('we', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('impression', 'NN')
         Tokenizer matches: [('impression', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('problem', 'NN')
         Tokenizer matches: [('problem', 'VB')]
             false positive POS tag match: nn
     Manual annotation: ('false', 'JJ')
         Tokenizer matches: [('false', 'NN')]
             false positive POS tag match: jj
     Manual annotation: ('want', 'VBP')
         Tokenizer matches: [('want', 'NN')]
             false positive POS tag match: vbp
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('size', 'NN')
         Tokenizer matches: [('size', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('explicitly', 'RB')
         Tokenizer matches: [('explicitly', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('I', 'PRP')
         Tokenizer matches: [('i', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('This', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('ives', 'VBZ')
         Tokenizer matches: []
     Manual annotation: ('not', 'RB')
         Tokenizer matches: [('not', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ("print('the list is empty')", 'String')
         Tokenizer matches: [("print('the list is empty')", 'METHOD')]
             false positive POS tag match: string
     Manual annotation: ('variable', 'NN')
         Tokenizer matches: [('variable', 'JJ')]
             false positive POS tag match: nn
     Manual annotation: ('that', 'IN')
         Tokenizer matches: [('that', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('with', 'IN')
         Tokenizer matches: [('with', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('len(li)', 'Method')
         Tokenizer matches: [('len(li)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('sequence', 'NN')
         Tokenizer matches: [('sequence', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('100', 'CD')
         Tokenizer matches: []
     Manual annotation: ('0', 'Operator')
         Tokenizer matches: []
     Manual annotation: ('li', 'UNK')
         Tokenizer matches: [('li', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('boolean', 'JJ')
         Tokenizer matches: [('boolean', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('My', 'PRP_')
         Tokenizer matches: [('my', 'PRP$')]
             true positive POS tag match: prp_
     Manual annotation: ('and', 'CC')
         Tokenizer matches: [('and', 'CC')]
             true positive POS tag match: cc
     Manual annotation: ('it', 'PRP')
         Tokenizer matches: [('it', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('test', 'VB')
         Tokenizer matches: [('test', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('==', 'Operator')
         Tokenizer matches: [('==', 'OPERATOR')]
             true positive POS tag match: operator
Post: 90
     Manual annotation: ('type(alist)', 'Method')
         Tokenizer matches: [('type(alist)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('if', 'Operator')
         Tokenizer matches: [('if', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('alist', 'Variable')
         Tokenizer matches: [('alist', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('elif', 'Operator')
         Tokenizer matches: [('elif', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('else', 'Operator')
         Tokenizer matches: [('else', 'RB')]
             false positive POS tag match: operator
     Manual annotation: ('list', 'Operand')
         Tokenizer matches: [('list', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('is', 'Operator')
         Tokenizer matches: [('is', 'VBZ')]
             false positive POS tag match: operator
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('not', 'Operator')
         Tokenizer matches: [('not', 'RB')]
             false positive POS tag match: operator
     Manual annotation: ('flatten(alist[0]) + flatten(alist[1:])', 'Method')
         Tokenizer matches: []
     Manual annotation: ('return', 'Operator')
         Tokenizer matches: [('return', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('==', 'Operator')
         Tokenizer matches: [('==', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('flatten(alist)', 'Method')
         Tokenizer matches: [('flatten(alist)', 'METHOD')]
             true positive POS tag match: method
Post: 91-2
     Manual annotation: ('See', 'VB')
         Tokenizer matches: [('see', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('more', 'JJR')
         Tokenizer matches: [('more', 'JJR')]
             true positive POS tag match: jjr
     Manual annotation: ('enumerate(S)', 'Method')
         Tokenizer matches: [('enumerate(s)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('print', 'VB')
         Tokenizer matches: []
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('value', 'Variable')
         Tokenizer matches: [('value', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('this', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('makes', 'VBZ')
         Tokenizer matches: [('makes', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('here', 'RB')
         Tokenizer matches: [('here', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('prettier', 'JJR')
         Tokenizer matches: [('prettier', 'NN')]
             false positive POS tag match: jjr
     Manual annotation: ('index', 'Variable')
         Tokenizer matches: []
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('enumerate()', 'Method')
         Tokenizer matches: [('enumerate()', 'METHOD')]
             true positive POS tag match: method
Post: 92
     Manual annotation: ('range(4)', 'Method')
         Tokenizer matches: [('range(4)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('Shiny', 'Variable')
         Tokenizer matches: [('shiny', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('Materials.Matte', 'Variable')
         Tokenizer matches: [('materials.matte', 'URL')]
             false positive POS tag match: variable
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('3', 'CD')
         Tokenizer matches: []
     Manual annotation: ('Shaded', 'Variable')
         Tokenizer matches: [('shaded', 'VBD')]
             false positive POS tag match: variable
     Manual annotation: ('Matte', 'Variable')
         Tokenizer matches: [('matte', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('class', 'Operator')
         Tokenizer matches: [('class', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('Transparent', 'Variable')
         Tokenizer matches: [('transparent', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('Materials', 'Operand')
         Tokenizer matches: [('materials', 'NNS')]
             false positive POS tag match: operand
Post: 93
     Manual annotation: ('second', 'JJ')
         Tokenizer matches: [('second', 'JJ')]
             true positive POS tag match: jj
     Manual annotation: ('make', 'VB')
         Tokenizer matches: [('make', 'VB')]
             true positive POS tag match: vb
     Manual annotation: ('(b,)', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('b', 'Variable')
         Tokenizer matches: [('b', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('+', 'Operator')
         Tokenizer matches: [('+', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('1-tuple', 'NN')
         Tokenizer matches: [('1-tuple', 'JJ')]
             false positive POS tag match: nn
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ("('2',)", 'Operand')
         Tokenizer matches: []
     Manual annotation: ('element', 'NN')
         Tokenizer matches: [('element', 'VB')]
             false positive POS tag match: nn
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('need', 'VBP')
         Tokenizer matches: [('need', 'VBN')]
             false positive POS tag match: vbp
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ("'z'", 'String')
         Tokenizer matches: [("'z'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('new', 'Variable')
         Tokenizer matches: [('new', 'JJ')]
             false positive POS tag match: variable
     Manual annotation: ('to', 'TO')
         Tokenizer matches: [('to', 'TO')]
             true positive POS tag match: to
     Manual annotation: ('a', 'Variable')
         Tokenizer matches: [('a', 'DT')]
             false positive POS tag match: variable
Post: 94
     Manual annotation: ("{'key':'value'}", 'Operand')
         Tokenizer matches: []
     Manual annotation: ("'mynewvalue'", 'String')
         Tokenizer matches: [("'mynewvalue'", 'STRING')]
             true positive POS tag match: string
     Manual annotation: ('d', 'Variable')
         Tokenizer matches: [('d', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('print(d)', 'Method')
         Tokenizer matches: [('print(d)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ("{'key': 'value'}", 'Variable')
         Tokenizer matches: []
     Manual annotation: ("d['mynewkey']", 'Variable')
         Tokenizer matches: []
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ("{'mynewkey': 'mynewvalue', 'key': 'value'}", 'Variable')
         Tokenizer matches: []
Post: 95
     Manual annotation: ('{1:2}', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('x', 'Variable')
         Tokenizer matches: [('x', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('x.update({3:4})', 'Method')
         Tokenizer matches: [('x.update({3:4})', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('{1: 2, 3: 4}', 'Variable')
         Tokenizer matches: []
     Manual annotation: ('{1: 2}', 'Variable')
         Tokenizer matches: []
     Manual annotation: ('print', 'VB')
         Tokenizer matches: [('print', 'NN')]
             false positive POS tag match: vb
Post: 96
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ("{'banana': 3, 'apple':4, 'pear': 1, 'orange': 2}", 'Operand')
         Tokenizer matches: []
     Manual annotation: ('OrderedDict', 'UNK')
         Tokenizer matches: [('ordereddict', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('http://docs.python.org/dev/library/collections.html#ordereddict-examples-and-recipes', 'URL')
         Tokenizer matches: []
     Manual annotation: ('d', 'Variable')
         Tokenizer matches: [('d', 'NN')]
             false positive POS tag match: variable
     Manual annotation: ('copy-paste', 'NN')
         Tokenizer matches: []
     Manual annotation: ('# regular unsorted dictionary', 'Comment')
         Tokenizer matches: [('# regular unsorted dictionary', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('OrderedDict(sorted(d.items(), key=lambda t: t[0]))', 'Method')
         Tokenizer matches: [('ordereddict(sorted(d.items(), key=lambda t: t[0]))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('2.7', 'CD')
         Tokenizer matches: []
     Manual annotation: ("OrderedDict([('pear', 1), ('orange', 2), ('banana', 3), ('apple', 4)])", 'Method')
         Tokenizer matches: [("ordereddict([('pear', 1), ('orange', 2), ('banana', 3), ('apple', 4)])", 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('OrderedDict(sorted(d.items(), key=lambda t: t[1]))', 'Method')
         Tokenizer matches: [('ordereddict(sorted(d.items(), key=lambda t: t[1]))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('Enjoy', 'VB')
         Tokenizer matches: [('enjoy', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('In', 'IN')
         Tokenizer matches: [('in', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('simply', 'JJ')
         Tokenizer matches: [('simply', 'RB')]
             false positive POS tag match: jj
     Manual annotation: ('Python', 'NNP')
         Tokenizer matches: [('python', 'NN')]
             true positive POS tag match: nnp
     Manual annotation: ('do', 'VB')
         Tokenizer matches: [('do', 'VBP')]
             true positive POS tag match: vb
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('collections', 'UNK')
         Tokenizer matches: [('collections', 'NNS')]
             false positive POS tag match: unk
     Manual annotation: ('# dictionary sorted by value', 'Comment')
         Tokenizer matches: [('# dictionary sorted by value', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('# dictionary sorted by key', 'Comment')
         Tokenizer matches: [('# dictionary sorted by key', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ("OrderedDict([('apple', 4), ('banana', 3), ('orange', 2), ('pear', 1)])", 'Method')
         Tokenizer matches: [("ordereddict([('apple', 4), ('banana', 3), ('orange', 2), ('pear', 1)])", 'METHOD')]
             true positive POS tag match: method
Post: 97
     Manual annotation: ('if', 'IN')
         Tokenizer matches: [('if', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('# Basic usage of switch', 'Comment')
         Tokenizer matches: [('# basic usage of switch', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('from', 'IN')
         Tokenizer matches: [('from', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('case', 'NN')
         Tokenizer matches: [('case', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('case(3,4)', 'Method')
         Tokenizer matches: [('case(3,4)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('case(0)', 'Method')
         Tokenizer matches: [('case(0)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('class', 'Operator')
         Tokenizer matches: [('class', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('# Allows traceback to occur', 'Comment')
         Tokenizer matches: [('# allows traceback to occur', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('else', 'Operator')
         Tokenizer matches: [('else', 'RB')]
             false positive POS tag match: operator
     Manual annotation: ('__call__(self, cond, *mconds)', 'Method')
         Tokenizer matches: [('__call__(self, cond, *mconds)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('print("Let\'s go have fun!")', 'Method')
         Tokenizer matches: [('print("let\'s go have fun!")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('__init__(self, value)', 'Method')
         Tokenizer matches: [('__init__(self, value)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('# Default would occur here', 'Comment')
         Tokenizer matches: [('# default would occur here', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('Switch(datetime.today().weekday())', 'Method')
         Tokenizer matches: [('switch(datetime.today().weekday())', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('elif', 'Operator')
         Tokenizer matches: [('elif', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('__enter__(self)', 'Method')
         Tokenizer matches: [('__enter__(self)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('Switch', 'Operand')
         Tokenizer matches: [('switch', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('datetime', 'UNK')
         Tokenizer matches: [('datetime', 'NN')]
             false positive POS tag match: unk
     Manual annotation: ('case(1,2)', 'Method')
         Tokenizer matches: [('case(1,2)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('__exit__(self, type, value, traceback)', 'Method')
         Tokenizer matches: [('__exit__(self, type, value, traceback)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ("# Didn't use case for example purposes", 'Comment')
         Tokenizer matches: [("# didn't use case for example purposes", 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('self._val', 'Variable')
         Tokenizer matches: [('self._val', 'JJ')]
             false positive POS tag match: variable
     Manual annotation: ('with', 'IN')
         Tokenizer matches: [('with', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('print("When is the weekend going to be here?")', 'Method')
         Tokenizer matches: [('print("when is the weekend going to be here?")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('value', 'Operand')
         Tokenizer matches: [('value', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('as', 'IN')
         Tokenizer matches: [('as', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('# This switch also supports multiple conditions (in one line)', 'Comment')
         Tokenizer matches: [('# this switch also supports multiple conditions (in one line)', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('import', 'VB')
         Tokenizer matches: [('import', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('False', 'Operand')
         Tokenizer matches: [('false', 'NN')]
             false positive POS tag match: operand
     Manual annotation: ('print("I hate mondays so much.")', 'Method')
         Tokenizer matches: [('print("i hate mondays so much.")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('def', 'Operator')
         Tokenizer matches: [('def', 'NN')]
             false positive POS tag match: operator
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('print("The weekend is near.")', 'Method')
         Tokenizer matches: [('print("the weekend is near.")', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('# Note there is no break needed here', 'Comment')
         Tokenizer matches: [('# note there is no break needed here', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('(cond,)+mconds', 'Operand')
         Tokenizer matches: []
     Manual annotation: ('return', 'Operator')
         Tokenizer matches: [('return', 'NN')]
             false positive POS tag match: operator
Post: 98
     Manual annotation: ('# this while loop block simulates a case block', 'Comment')
         Tokenizer matches: [('# this while loop block simulates a case block', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('# case', 'Comment')
         Tokenizer matches: [('# case', 'COMMENT')]
             true positive POS tag match: comment
     Manual annotation: ('# simple case alternative', 'Comment')
         Tokenizer matches: [('# simple case alternative', 'COMMENT')]
             true positive POS tag match: comment
Post: 99
     Manual annotation: ('using', 'VBG')
         Tokenizer matches: []
     Manual annotation: ('can', 'MD')
         Tokenizer matches: [('can', 'MD')]
             true positive POS tag match: md
     Manual annotation: ('reversed(array)', 'Method')
         Tokenizer matches: [('reversed(array)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('this', 'DT')
         Tokenizer matches: [('this', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('return', 'VB')
         Tokenizer matches: [('return', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('list(reversed(array))', 'Method')
         Tokenizer matches: [('list(reversed(array))', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('You', 'PRP')
         Tokenizer matches: [('you', 'PRP')]
             true positive POS tag match: prp
     Manual annotation: ('the', 'DT')
         Tokenizer matches: [('the', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('Note', 'VB')
         Tokenizer matches: [('note', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('array', 'Variable')
         Tokenizer matches: [('array', 'VBP')]
             false positive POS tag match: variable
     Manual annotation: ('list', 'NN')
         Tokenizer matches: [('list', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('[0,10,20,40]', 'Operand')
         Tokenizer matches: [('[0,10,20,40]', 'NNP')]
             false positive POS tag match: operand
     Manual annotation: ('print(i)', 'Method')
         Tokenizer matches: [('print(i)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('function', 'NN')
         Tokenizer matches: [('function', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('get', 'VB')
         Tokenizer matches: [('get', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('not', 'RB')
         Tokenizer matches: [('not', 'RB')]
             true positive POS tag match: rb
     Manual annotation: ('=', 'Operator')
         Tokenizer matches: [('=', 'OPERATOR')]
             true positive POS tag match: operator
     Manual annotation: ('use', 'NN')
         Tokenizer matches: [('use', 'NN')]
             true positive POS tag match: nn
     Manual annotation: ('reversed(...)', 'Method')
         Tokenizer matches: [('reversed(...)', 'METHOD')]
             true positive POS tag match: method
     Manual annotation: ('for', 'Operator')
         Tokenizer matches: [('for', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('that', 'IN')
         Tokenizer matches: [('that', 'DT')]
             false positive POS tag match: in
     Manual annotation: ('make', 'VB')
         Tokenizer matches: [('make', 'NN')]
             false positive POS tag match: vb
     Manual annotation: ('reversed', 'VBN')
         Tokenizer matches: [('reversed', 'VBN')]
             true positive POS tag match: vbn
     Manual annotation: ('as', 'IN')
         Tokenizer matches: [('as', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('for', 'IN')
         Tokenizer matches: [('for', 'IN')]
             true positive POS tag match: in
     Manual annotation: ('in', 'Operator')
         Tokenizer matches: [('in', 'IN')]
             false positive POS tag match: operator
     Manual annotation: ('a', 'DT')
         Tokenizer matches: [('a', 'DT')]
             true positive POS tag match: dt
     Manual annotation: ('does', 'VBZ')
         Tokenizer matches: [('does', 'VBZ')]
             true positive POS tag match: vbz
     Manual annotation: ('i', 'Variable')
         Tokenizer matches: [('i', 'PRP')]
             false positive POS tag match: variable
     Manual annotation: ('of', 'IN')
         Tokenizer matches: [('of', 'IN')]
             true positive POS tag match: in
[[   0  161]
 [   1 1780]
 [   2 1212]]
1941
True Positives: 1212
False Positives: 568
False Negatives: 0
Precision: 0.6808988764044944
Recall: 1.0
F1 Score: 0.8101604278074866